<?php

use Hyperf\DB\DB;
use Hyperf\Contract\ConfigInterface;
use Hyperf\Utils\ApplicationContext;

class ArkDataController
{
    protected $sysTime = 0;
    protected $sysStartTime = 0;

    protected $_user_id = 0;
    protected $_admin_id = 0;

    protected $user_id = 0;

    protected $redis = null;

    protected $dbhost = '001';
    protected $codeno = '001';
    protected $userInfo = [];

    protected $tips = array();

    protected $currency_list = array();

    protected $amzon_site = array();

    protected $fba_area_ids = array(
        1 => 1,//美国
        2 => 2,//加拿大
        3 => 3,//墨西哥
        4 => 4,//德国
        5 => 4,//西班牙
        6 => 4,//法国
        7 => 8,//印度
        8 => 4,//意大利
        9 => 14,//英国
        10 => 5,//中国
        11 => 6,//日本
        12 => 7,//澳大利亚
        13 => 9,//巴西
        14 => 10,//土耳其
        15 => 11,//阿拉伯联合酋长国
        16 => 4 ,
        17 => 12 ,
        18 => 13 ,
    );

    protected $amzon_site_country = array();

    public function __construct()
    {
        parent::__construct();

        $server = $this->request->getServerParams();
        $this->sysTime = $server['request_time'];
        $this->sysStartTime = $server['request_time_float'];
        $this->redis = new \App\Lib\Redis();

        $this->userInfo = $this->request->getAttribute('userInfo');
        $this->dbhost = $userInfo['dbhost'];
        $this->codeno = $userInfo['codeno'];
        $this->_admin_id = $userInfo['admin_id'];
        $this->_user_id = $this->user_id = $userInfo['user_id'];

        $this->amzon_site_country = array(
            1 => array(
                'site_key' => 'g_north_american',
                'site_name' => L('north_america_site'),
                'country' => array(
                    array('id' => 1, "name" => L('us_country_name'), "country_key" => "g_usa", "currency_code" => "USD", "currency_symbol" => "$", "code" => "US"),
                    array('id' => 2, "name" => L('ca_country_name'), "country_key" => "g_canada", "currency_code" => "CAD", "currency_symbol" => "C$", "code" => "CA"),
                    array('id' => 3, "name" => L('mx_country_name'), "country_key" => "g_mexico", "currency_code" => "MXN", "currency_symbol" => "Mex$", "code" => "MX"),
                    array('id' => 13, "name" => L('br_country_name'),"country_key"=>"g_brazil", "currency_code" => "BRL", "currency_symbol" => "R$", "code" => "BR")
                )
            ),
            2 => array(
                'site_key' => 'g_europ',
                'site_name' => L('europe_site'),
                'country' => array(
                    array('id' => 4, "name" => L('de_country_name'), "country_key" => "g_germany", "currency_code" => "EUR", "currency_symbol" => "€", "code" => "DE"),
                    array('id' => 5, "name" => L('es_country_name'), "country_key" => "g_spain", "currency_code" => "EUR", "currency_symbol" => "€", "code" => "ES"),
                    array('id' => 6, "name" => L('fr_country_name'), "country_key" => "g_france", "currency_code" => "EUR", "currency_symbol" => "€", "code" => "FR"),
                    array('id' => 8, "name" => L('it_country_name'), "country_key" => "g_italy", "currency_code" => "EUR", "currency_symbol" => "€", "code" => "IT"),
                    array('id' => 9, "name" => L('uk_country_name'), "country_key" => "g_england", "currency_code" => "GBP", "currency_symbol" => "£", "code" => "UK"),
                    array('id' => 7, "name" => L('in_country_name'), "country_key" => "g_india", "currency_code" => "INR", "currency_symbol" => "₹", "code" => "IN"),
                    array('id' => 14, "name" => L('tr_country_name'), "country_key" => "g_turkey", "currency_code" => "TRY", "currency_symbol" => "₺", "code" => "TR"),
                    array('id' => 15, "name" => L('ae_country_name'), "country_key" => "g_arabic", "currency_code" => "AED", "currency_symbol" => "AED", "code" => "AE") ,
                    array('id' => 16, "name" => L('nl_country_name'),"country_key"=>"g_netherlands", "currency_code" => "EUR", "currency_symbol" => "€", "code" => "NL"),
                    array('id' => 17, "name" => L('sa_country_name'),"country_key"=>"g_arabia", "currency_code" => "SAR", "currency_symbol" => "SAR", "code" => "SA")

                )
            ),
            4 => array(
                'site_key' => 'g_japan',
                'site_name' => L('japan_site'),
                'country' => array(
                    array('id' => 11, "name" => L('jp_country_name'), "country_key" => "g_japan", "currency_code" => "JPY", "currency_symbol" => "¥", "code" => "JP")
                )
            ),
            5 => array(
                'site_key' => 'g_australia',
                'site_name' => L('australia_site'),
                'country' => array(
                    array('id' => 12, "name" => L('au_country_name'), "country_key" => "g_australia", "currency_code" => "AUD", "currency_symbol" => "A$", "code" => "AU")
                )
            ),
            6 => array(
                'site_key'=>'g_singapore',
                'site_name' => L('sg_site'),
                'country'   => array(
                    array('id' => 18,"name" => L('sg_country_name'),"country_key"=>"g_singapore", "currency_code" => "SGD", "currency_symbol" => "S$", "code" => "SG" )

                )
            ),
        );

        $this->amzon_site = array(
            1 => array("name" => L('us_country_name'), "country_key" => "g_usa", "currency_code" => "USD", "currency_symbol" => "$", "code" => "US", "area" => "NorthAmerica", "MarketplaceId" => "ATVPDKIKX0DER", "siteUrl" => "https://mws.amazonservices.com", "website" => "https://www.amazon.com","site_group_id" => 1 , "volume_unit"=> "ft³"),
            2 => array("name" => L('ca_country_name'), "country_key" => "g_canada", "currency_code" => "CAD", "currency_symbol" => "C$", "code" => "CA", "is_sale" => "NorthAmerica", "MarketplaceId" => "A2EUQ1WTGCTBG2", "siteUrl" => "https://mws.amazonservices.ca", "website" => "http://www.amazon.ca" ,"site_group_id" => 1 , "volume_unit"=> "m³"),
            3 => array("name" => L('mx_country_name'), "country_key" => "g_mexico", "currency_code" => "MXN", "currency_symbol" => "Mex$", "code" => "MX", "is_sale" => "NorthAmerica", "MarketplaceId" => "A1AM78C64UM0Y8", "siteUrl" => "https://mws.amazonservices.com", "website" => "http://www.amazon.com.mx","site_group_id" => 1 , "volume_unit"=> "dm ³"),
            4 => array("name" => L('de_country_name'), "country_key" => "g_germany", "currency_code" => "EUR", "currency_symbol" => "€", "code" => "DE", "is_sale" => "Europe", "MarketplaceId" => "A1PA6795UKMFR9", "siteUrl" => "https://mws-eu.amazonservices.com", "website" => "http://www.amazon.de" ,"site_group_id" => 2 , "volume_unit"=> "m³"),
            5 => array("name" => L('es_country_name'), "country_key" => "g_spain", "currency_code" => "EUR", "currency_symbol" => "€", "code" => "ES", "is_sale" => "Europe", "MarketplaceId" => "A1RKKUPIHCS9HS", "siteUrl" => "https://mws-eu.amazonservices.com", "website" => "http://www.amazon.es" ,"site_group_id" => 2 , "volume_unit"=> "m³"),
            6 => array("name" => L('fr_country_name'), "country_key" => "g_france", "currency_code" => "EUR", "currency_symbol" => "€", "code" => "FR", "is_sale" => "Europe", "MarketplaceId" => "A13V1IB3VIYZZH", "siteUrl" => "https://mws-eu.amazonservices.com", "website" => "http://www.amazon.fr","site_group_id" => 2 , "volume_unit"=> "m³"),
            7 => array("name" => L('in_country_name'), "country_key" => "g_india", "currency_code" => "INR", "currency_symbol" => "₹", "code" => "IN", "is_sale" => "Europe", "MarketplaceId" => "A21TJRUUN4KGV", "siteUrl" => "https://mws.amazonservices.in", "website" => "http://www.amazon.in","site_group_id" => 2 , "volume_unit"=> "0"),
            8 => array("name" => L('it_country_name'), "country_key" => "g_italy", "currency_code" => "EUR", "currency_symbol" => "€", "code" => "IT", "is_sale" => "Europe", "MarketplaceId" => "APJ6JRA9NG5V4", "siteUrl" => "https://mws-eu.amazonservices.com", "website" => "http://www.amazon.it","site_group_id" => 2 , "volume_unit"=> "m³"),
            9 => array("name" => L('uk_country_name'), "country_key" => "g_england", "currency_code" => "GBP", "currency_symbol" => "£", "code" => "UK", "is_sale" => "Europe", "MarketplaceId" => "A1F83G8C2ARO7P", "siteUrl" => "https://mws-eu.amazonservices.com", "website" => "http://www.amazon.co.uk"  ,"site_group_id" => 2 , "volume_unit"=> "ft³"),
            10 => array("name" => L('cn_country_name'), "country_key" => "g_china", "currency_code" => "CNY", "currency_symbol" => "￥", "code" => "CN", "is_sale" => "China", "MarketplaceId" => "AAHKV2X7AFYLW", "siteUrl" => "https://mws.amazonservices.com.cn", "website" => "http://www.amazon.cn" ,"site_group_id" => 3, "volume_unit"=> ""),
            11 => array("name" => L('jp_country_name'), "country_key" => "g_japan", "currency_code" => "JPY", "currency_symbol" => "¥", "code" => "JP", "is_sale" => "Japan", "MarketplaceId" => "A1VC38T7YXB528", "siteUrl" => "https://mws.amazonservices.jp", "website" => "http://www.amazon.co.jp","site_group_id" => 4, "volume_unit"=> "cm³"),
            12 => array("name" => L('au_country_name'), "country_key" => "g_australia", "currency_code" => "AUD", "currency_symbol" => "A$", "code" => "AU", "is_sale" => "Australia", "MarketplaceId" => "A39IBJ37TRP1C6", "siteUrl" => "https://mws.amazonservices.com.au", "website" => "http://www.amazon.com.au" ,"site_group_id" => 5, "volume_unit"=> "m³"),
            13 => array("name" => L('br_country_name'), "country_key" => "g_brazil", "currency_code" => "BRL", "currency_symbol" => "R$", "code" => "BR", "is_sale" => "NorthAmerica", "MarketplaceId" => "A2Q3Y263D00KWC", "siteUrl" => "https://mws.amazonservices.com", "website" => "http://www.amazon.com.br/" ,"site_group_id" => 1 , "volume_unit"=> "m³"),
            14 => array("name" => L('tr_country_name'), "country_key" => "g_turkey", "currency_code" => "TRY", "currency_symbol" => "₺", "code" => "TR", "is_sale" => "Europe", "MarketplaceId" => "A33AVAJ2PDY3EV", "siteUrl" => "https://mws-eu.amazonservices.com", "website" => "http://www.amazon.com.tr/","site_group_id" => 2 , "volume_unit"=> "m³"),
            15 => array("name" => L('ae_country_name'), "country_key" => "g_arabic", "currency_code" => "AED", "currency_symbol" => "AED", "code" => "AE", "is_sale" => "Europe", "MarketplaceId" => "A2VIGQ35RCS4UG", "siteUrl" => "https://mws.amazonservices.ae", "website" => "http://www.amazon.ae/" ,"site_group_id" => 2 , "volume_unit"=> "m³") ,
            16 => array("name" =>  L('nl_country_name'),"country_key"=>"g_netherlands", "currency_code" => "EUR", "currency_symbol" => "€", "code" => "NL", "is_sale" => "Europe", "MarketplaceId" => "A1805IZSGTT6HS", "siteUrl" => "https://mws-eu.amazonservices.com", "website" => "https://www.amazon.nl" ,"site_group_id" => 2 , "volume_unit"=> "m³") ,
            17 => array("name" =>  L('sa_country_name'),"country_key"=>"g_arabia", "currency_code" => "SAR", "currency_symbol" => "SAR", "code" => "SA", "is_sale" => "Europe", "MarketplaceId" => "A17E79C6D8DWNP", "siteUrl" => "https://mws-eu.amazonservices.com", "website" => "https://www.amazon.sa" ,"site_group_id" => 2 , "volume_unit"=> "m³") ,
            18 => array("name" =>  L('sg_country_name'),"country_key"=>"g_singapore", "currency_code" => "SGD", "currency_symbol" => "S$", "code" => "SG", "is_sale" => "Singapore", "MarketplaceId" => "A19VAU5U5O7RUS", "siteUrl" => "https://mws-fe.amazonservices.com", "website" => "https://www.amazon.sg","site_group_id" => 6, "volume_unit"=> "m³") ,
        );

        $this->currency_list = array(
            "CNY" => array("name" => L('rmb_currency_name'), "code" => "CNY", "symbol" => "￥", "names" => L("m_rmb_currency") , 'diy_mysql_key'=> 'rmb_exchang_rate' , 'system_mysql_key'=>'rmb_exchang_rate'),
            "USD" => array("name" => L('usd_currency_name'), "code" => "USD", "symbol" => "$", "names" => L("m_dollar_currency"), 'diy_mysql_key'=> 'custom_usd_exchang_rate' , 'system_mysql_key'=>'usd_exchang_rate'),
            "GBP" => array("name" => L('gbp_currency_name'), "code" => "GBP", "symbol" => "£", "names" => L("m_pound_currency"), 'diy_mysql_key'=> 'custom_gbp_exchang_rate' , 'system_mysql_key'=>'gbp_exchang_rate'),
            "EUR" => array("name" => L('eur_currency_name'), "code" => "EUR", "symbol" => "€", "names" => L("m_euro_currency"), 'diy_mysql_key'=> 'custom_eur_exchang_rate' , 'system_mysql_key'=>'eur_exchang_rate'),
            "TRY" => array("name" => L('tr_currency_name'), "code" => "TRY", "symbol" => "₺", "names" => L("m_try_currency"), 'diy_mysql_key'=> 'custom_tr_exchang_rate' , 'system_mysql_key'=>'tr_exchang_rate'),
            "AUD" => array("name" => L('au_currency_name'), "code" => "AUD", "symbol" => "A$", "names" => L("m_australia_currency"), 'diy_mysql_key'=> 'custom_au_exchang_rate' , 'system_mysql_key'=>'au_exchang_rate'),
            "JPY" => array("name" => L('jpy_currency_name'), "code" => "JPY", "symbol" => "¥", "names" => L("m_yen_currency"), 'diy_mysql_key'=> 'custom_jpy_exchang_rate' , 'system_mysql_key'=>'jpy_exchang_rate'),
            "AED" => array("name" => L('ae_currency_name'), "code" => "AED", "symbol" => "AED", "names" => L("m_aed_currency"), 'diy_mysql_key'=> 'custom_ae_exchang_rate' , 'system_mysql_key'=>'ae_exchang_rate'),
            "BRL" => array("name" => L('br_currency_name'), "code" => "BRL", "symbol" => "R$", "names" => L("m_brl_currency"), 'diy_mysql_key'=> 'custom_br_exchang_rate' , 'system_mysql_key'=>'br_exchang_rate'),
            "INR" => array("name" => L('in_currency_name'), "code" => "INR", "symbol" => "₹", "names" => L("m_india_currency"), 'diy_mysql_key'=> 'custom_in_exchang_rate' , 'system_mysql_key'=>'in_exchang_rate'),
            "CAD" => array("name" => L('cad_currency_name'), "code" => "CAD", "symbol" => "C$", "names" => L("m_cad_currency"), 'diy_mysql_key'=> 'custom_cad_exchang_rate' , 'system_mysql_key'=>'cad_exchang_rate'),
            "MXN" => array("name" => L('mxn_currency_name'), "code" => "MXN", "symbol" => "Mex$", "names" => L("m_mexican_peso_currency"), 'diy_mysql_key'=> 'custom_mxn_exchang_rate' , 'system_mysql_key'=>'mxn_exchang_rate'),
            "NLG" =>array("name" => L('nl_currency_name') , "code" => "NLG" , "symbol"=>"fl" , "names"=>L("m_netherlands_currency"), 'diy_mysql_key'=> 'custom_nl_exchang_rate' , 'system_mysql_key'=>'nl_exchang_rate') ,
            "SAR" =>array("name" => L('sa_currency_name') , "code" => "SAR" , "symbol"=>"SAR" , "names"=>L("m_arabia_currency"), 'diy_mysql_key'=> 'custom_sa_exchang_rate' , 'system_mysql_key'=>'sa_exchang_rate') ,
            "SGD" =>array("name" => L('sg_currency_name') , "code" => "SGD" , "symbol"=>"S$" , "names"=>L("m_singapore_currency"), 'diy_mysql_key'=> 'custom_sg_exchang_rate' , 'system_mysql_key'=>'sg_exchang_rate') ,
        );

        $this->tips = array(
            "tips"               => array(//所有状态默认的回复
                0 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_data_tips", array(), 'tips'),
                    "tips_operate" => L("not_data_operate", array(), 'tips'),
                ),
                1 => array(
                    "img"          => 'statics/images/tips/not_match_data.png',
                    "tips"         => L("not_match_data_tips", array(), 'tips'),
                    "tips_operate" => L("not_match_data_operate", array(), 'tips'),
                ),
                2 => array(
                    "img"          => 'statics/images/tips/not_auth_channel.png',
                    "tips"         => L("not_auth_channel_tips", array(), 'tips'),
                    "tips_operate" => L("not_auth_channel_operate", array(), 'tips'),
                ),
                3 => array(
                    "img"          => 'statics/images/tips/not_bug_meal.png',
                    "tips"         => L("not_bug_meal_tips", array(), 'tips'),
                    "tips_operate" => L("not_bug_meal_operate", array(), 'tips'),
                ),
                4 => array(
                    "img"          => 'statics/images/tips/not_auth_cpc_channel.png',
                    "tips"         => L("not_auth_cpc_channel_tips", array(), 'tips'),
                    "tips_operate" => L("not_auth_cpc_channel_operate", array(), 'tips'),
                ),
                5 => array(
                    "img"          => 'statics/images/tips/not_add_email.png',
                    "tips"         => L("not_add_email_tips", array(), 'tips'),
                    "tips_operate" => L("not_add_email_operate", array(), 'tips'),
                ),
                6 => array(
                    "img"          => 'statics/images/tips/not_permission.png',
                    "tips"         => L("not_permission_tips", array(), 'tips'),
                    "tips_operate" => L("not_permission_operate", array(), 'tips'),
                ),
                7 => array(
                    "img"          => 'statics/images/tips/not_permission.png',
                    "tips"         => L("not_permission_tips", array(), 'tips'),
                    "tips_operate" => L("not_permission_operate", array(), 'tips'),
                ),
            ),
            //下面为自定义的 接口缺省值 展示配置信息
            "monitor-IndexMonitor" => array(
                0 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_data_tips", array(), 'tips'),
                    "tips_operate" => '',
                ),
                1 => array(
                    "img"          => 'statics/images/tips/not_match_data.png',
                    "tips"         => L("not_match_data_tips", array(), 'tips'),
                    "tips_operate" => '',
                ),
                2 => array(
                    "img"          => 'statics/images/tips/not_auth_channel.png',
                    "tips"         => L("not_auth_channel_tips", array(), 'tips'),
                    "tips_operate" => L("not_auth_channel_operate", array(), 'tips'),
                ),
                3 => array(
                    "img"          => 'statics/images/tips/not_bug_meal.png',
                    "tips"         => L("not_bug_meal_tips", array(), 'tips'),
                    "tips_operate" => L("not_bug_meal_operate", array(), 'tips'),
                ),
                4 => array(
                    "img"          => 'statics/images/tips/not_auth_cpc_channel.png',
                    "tips"         => L("not_auth_cpc_channel_tips", array(), 'tips'),
                    "tips_operate" => '',
                ),
                5 => array(
                    "img"          => 'statics/images/tips/not_add_email.png',
                    "tips"         => L("not_add_email_tips", array(), 'tips'),
                    "tips_operate" => L("not_add_email_operate", array(), 'tips'),
                ),
                6 => array(
                    "img"          => 'statics/images/tips/not_permission.png',
                    "tips"         => L("not_permission_tips", array(), 'tips'),
                    "tips_operate" => '',
                ),
            ) ,
            "monitor-IndexMonitor-index" => array(
                0 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_data_tips", array(), 'tips'),
                    "tips_operate" => '',
                ),
                1 => array(
                    "img"          => 'statics/images/tips/not_match_data.png',
                    "tips"         => L("not_match_data_tips", array(), 'tips'),
                    "tips_operate" => '',
                ),
                2 => array(
                    "img"          => 'statics/images/tips/not_auth_channel.png',
                    "tips"         => L("not_auth_channel_tips", array(), 'tips'),
                    "tips_operate" => '',
                ),
                3 => array(
                    "img"          => 'statics/images/tips/not_bug_meal.png',
                    "tips"         => L("not_bug_meal_tips", array(), 'tips'),
                    "tips_operate" => '',
                ),
                4 => array(
                    "img"          => 'statics/images/tips/not_auth_cpc_channel.png',
                    "tips"         => L("not_auth_cpc_channel_tips", array(), 'tips'),
                    "tips_operate" => '',
                ),
                5 => array(
                    "img"          => 'statics/images/tips/not_add_email.png',
                    "tips"         => L("not_add_email_tips", array(), 'tips'),
                    "tips_operate" => L("not_add_email_operate", array(), 'tips'),
                ),
                6 => array(
                    "img"          => 'statics/images/tips/not_permission.png',
                    "tips"         => L("not_permission_tips", array(), 'tips'),
                    "tips_operate" => '',
                ),
            ),
            "FBA-fba_inventory_v3"     => array(//所有状态默认的回复
                0 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_data_tips", array(), 'tips'),
                    "tips_operate" => L("not_data_operate", array(), 'tips'),
                ),
                1 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_match_data_tips", array(), 'tips'),
                    "tips_operate" => L("not_match_data_operate", array(), 'tips'),
                ),
                2 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_auth_channel_tips", array(), 'tips'),
                    "tips_operate" => L("not_auth_channel_operate", array(), 'tips'),
                ),
                3 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_bug_meal_tips", array(), 'tips'),
                    "tips_operate" => L("not_bug_meal_operate", array(), 'tips'),
                ),
                4 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_auth_cpc_channel_tips", array(), 'tips'),
                    "tips_operate" => L("not_auth_cpc_channel_operate", array(), 'tips'),
                ),
                5 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_add_email_tips", array(), 'tips'),
                    "tips_operate" => L("not_add_email_operate", array(), 'tips'),
                ),
                6 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_permission_tips", array(), 'tips'),
                    "tips_operate" => L("not_permission_operate", array(), 'tips'),
                ),
            ),
            "kanban-SingleCommodityKanban-goodsKanban" => array(
                0 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_data_tips", array(), 'tips'),
                    "tips_operate" => L("not_data_operate", array(), 'tips'),
                ),
                1 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_match_data_tips", array(), 'tips'),
                    "tips_operate" => L("not_match_data_operate", array(), 'tips'),
                ),
                2 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_auth_channel_tips", array(), 'tips'),
                    "tips_operate" => L("not_auth_channel_operate", array(), 'tips'),
                ),
                3 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_bug_meal_tips", array(), 'tips'),
                    "tips_operate" => L("not_bug_meal_operate", array(), 'tips'),
                ),
                4 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_auth_cpc_channel_tips", array(), 'tips'),
                    "tips_operate" => L("not_auth_cpc_channel_operate", array(), 'tips'),
                ),
                5 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_add_email_tips", array(), 'tips'),
                    "tips_operate" => L("not_add_email_operate", array(), 'tips'),
                ),
                6 => array(
                    "img"          => 'statics/images/tips/not_data.png',
                    "tips"         => L("not_permission_tips", array(), 'tips'),
                    "tips_operate" => L("not_permission_operate", array(), 'tips'),
                ),
            ),

            "datas_ark" => array(//数据方舟权限
                3 => array(
                    "img"          => 'statics/images/tips/not_permission.png',
                    "tips"         => L("not_ark_meal_permission_tips", array(), 'tips'),
                    "tips_operate" => L("not_ark_meal_permission_tips", array(), 'tips'),
                ),
                6 => array(
                    "img"          => 'statics/images/tips/not_permission.png',
                    "tips"         => L("not_ark_permission_tips", array(), 'tips'),
                    "tips_operate" => L("not_ark_permission_tips", array(), 'tips'),
                ),
                7 => array(
                    "img"          => 'statics/images/tips/not_permission.png',
                    "tips"         => L("not_ark_meal_permission_free_tips", array(), 'tips'),
                    "tips_operate" => L("not_ark_meal_permission_free_tips", array(), 'tips'),
                ),
            )

        );
    }

    // done
    public function search(
        string $target = '',
        string $count_dimension = 'sku',
        int $count_periods = 0,
        int $time_type = 99,
        int $page = 1,
        int $rows = 100,
        string $start_time = '',
        string $end_time = '',
        string $sort = '',
        string $order = '',
        array $other_params = []
    ) {
        $is_del_cache = intval($_REQUEST['is_del_cache']) ;
        if(empty($other_params['sale_datas_origin'])){
            $other_params['sale_datas_origin'] = 1 ;
        }
        if(empty($other_params['finance_datas_origin'])){
            $other_params['finance_datas_origin'] = 1 ;
        }
        if(empty($other_params['refund_datas_origin'])){
            $other_params['refund_datas_origin'] = 1 ;
        }
        if(empty($other_params['cost_count_type'])){
            $other_params['cost_count_type'] = 1 ;
        }
        if(empty($other_params['show_type'])){
            $other_params['show_type'] = 2 ;
        }
        $params = $other_params ;
        if($params['show_type'] == 1){
            $params['time_target'] = $params['target'] = $target ;
        }else{
            $params['target'] = $target ;
        }
        $params['count_dimension'] = $count_dimension ;
        $params['count_periods'] = $count_periods ;
        $params['time_type'] = $time_type ;
        $params['search_start_time'] = $start_time ;
        $params['search_end_time'] = $end_time ;

        $rt = $this->checkArkParams($params , $this->_user_id , $this->_admin_id) ;
        if($rt['code'] == 200){
            $data = $rt['params'] ;
            if(empty($data['where_detail'])){
                $where_detail  = array() ;
            }else if (!is_array($data['where_detail'])){
                $where_detail = json_decode($data['where_detail'] , true) ;
            }else{
                $where_detail = $data['where_detail'] ;
            }
            if(!empty($where_detail['country_site'])){
                $_REQUEST['country_site'] = $where_detail['country_site'] ;
            }
            if(!empty($where_detail['channel_id'])){
                $_REQUEST['channel_id'] = $where_detail['channel_id'] ;
            }
            if(!empty($where_detail['site_id'])){
                $_REQUEST['site_id'] = $where_detail['site_id'] ;
            }

            $channel_data = $this->getChannelListByParams2($_REQUEST) ;
            if(!$channel_data['IsSuccess']){
                $this->returnDatas('' , '-1' , $channel_data['msg']) ;
            }else{
                $channel_ids = array_column($channel_data['channel_arr'] , 'id') ;
            }
            //统计维度为店铺
            if(count($channel_ids) > 1){
                $where = 'report.user_id = '.$this->user_id.'  AND report.channel_id IN (' . implode(',' , $channel_ids) .')';
            }else{
                $where = 'report.user_id = '.$this->user_id. ' AND report.channel_id = ' . $channel_ids[0];
            }
            $origin_where = $where ;
            $data['origin_where'] = $origin_where ;
            $search_val = trim($_REQUEST['search_val']) ;
            if(!empty($search_val)){
                if($data['count_dimension'] == 'parent_asin'){
                    $where .= " AND report.goods_parent_asin like '%" . $search_val . "%'" ;
                }else if($data['count_dimension'] == 'asin'){
                    $where .= " AND report.goods_asin like '%" . $search_val . "%'" ;
                }else if($data['count_dimension'] == 'sku'){
                    $where .= " AND report.goods_sku like '%" . $search_val . "%'" ;
                }else if($data['count_dimension'] == 'isku'){
                    $where .= " AND report.isku like '%" . $search_val . "%'" ;
                }else if($data['count_dimension'] == 'site_group'){
                    $where .= " AND report.area_id = " . intval($search_val) ;
                }else if($data['count_dimension'] == 'channel_id'){
                    $where .= " AND report.channel_id = " . intval($search_val) ;
                }else if($data['count_dimension'] == 'site_id'){
                    $where .= " AND report.site_id = " . intval($search_val) ;
                }else if($data['count_dimension'] == 'class1'){
                    $where .= " AND report.goods_product_category_name_1 like '%" . $search_val . "%'" ;
                }else if($data['count_dimension'] == 'group'){
                    $where .= " AND report.goods_group_name like '%".$search_val."%' " ;
                }else if($data['count_dimension'] == 'tags'){
                    $where .= " AND gtags.tag_name like '%" . $search_val . "%'" ;
                }else if($data['count_dimension'] == 'operators'){
                    $where .= " AND report.operation_user_admin_name like '%" . $search_val . "%'" ;
                }
            }

            /**
             * 读取预加载数据
             */
            $pre_load_data = $data;
            unset($pre_load_data['modified_time']);
            unset($pre_load_data['modified_admin_id']);
            unset($pre_load_data['modified_admin_name']);
            $pre_load_data['page'] = $page;
            $pre_load_data['rows'] = $rows;
            $pre_load_data['sort'] = empty($sort) ? '' : $sort;
            $pre_load_data['order'] = empty($order) ? '' : $order;
            $pre_load_data['channel_id'] = $channel_ids;
            $pre_load_data['search_val'] = empty($search_val) ? '' : $search_val;
            ksort($pre_load_data);
            $redis_key = $pre_load_data['user_id']."_data_ark_".md5(json_encode($pre_load_data));
            $result = $this->redis->get($redis_key);
            //预加载结束
            if(empty($result) || $is_del_cache == 1){  //先暂时不缓存
                if(in_array($data['count_dimension'] , ['site_group','site_id','channel_id'])){
                    $result = $this->getUnGoodsDatas($where , $data , $page , $rows ,$sort,$order) ;
                }else{ //统计维度为商品
                    $result = $this->getGoodsDatas($where , $data , $page , $rows  ,$sort , $order) ;
                }
                $this->redis->set($redis_key , $result , 3600);
            }
            $result['code'] = 200 ;
            return $result;
        } else {
            return $rt ;
        }
    }

    // done
    protected function checkArkParams($datas = array() , $user_id = 0 ,$admin_id = 0 , $admin_name = '',$is_edit = 0)
    {
        $ark_config = ApplicationContext::getContainer()->get(ConfigInterface::class)->get('datas_ark', []);
        if(in_array($datas['count_dimension'] , ['site_group','site_id','channel_id','department','admin_id'])){
            $target_list = $ark_config['no_goods_target'] ;
        }else if($datas['count_dimension'] == 'operators'){
            $target_list = $ark_config['operation_target'] ;
        }else{
            $target_list =  $ark_config['goods_target'] ;
        }
        $targetData = array() ;
        foreach($target_list as $target1){
            if(!empty($target1['child'])){
                foreach($target1['child'] as $target2){
                    $targetData[$target2['key']] = $target2 ;
                }
            }
        }
        if($datas['count_dimension'] == 'department' || $datas['count_dimension'] == 'admin_id'){
            $sql = 'select is_master,is_responsible,user_department_id from erp_base.b_user_admin where user_id=? and id=?';
            $admin_info = DB::fetch($sql, [$user_id, $admin_id]);
        }
        if($datas['count_dimension'] == 'admin_id' && ($admin_info['is_master'] != 1 && $admin_info['is_responsible'] != 1) ){
            $rt['code'] = 444 ;
            $rt['msg'] = '非主账号且非部门负责人无法查看子账号统计维度信息' ;
            return $rt ;
        }
        $params = array() ;
        if($datas['count_dimension'] == 'department'){
            if($admin_info['is_master'] != 1 && ($admin_info['is_responsible'] != 1 || empty($admin_info['user_department_id']) ) ){
                $rt['code'] = 441 ;
                $rt['msg'] = '非主账号且非部门负责人无法查看部门统计维度信息' ;
                return $rt ;
            }else{
                if($admin_info['is_master'] == 1){
                    $params['is_check_department1'] = ($datas['is_check_department1'] == 1 ) ? 1 : 0 ;
                    $params['is_check_department2'] = ($datas['is_check_department2'] == 1 ) ? 1 : 0 ;
                    $params['is_check_department3'] = ($datas['is_check_department3'] == 1 ) ? 1 : 0 ;
                }else{
                    $departmentData = $this->getDevelopmentData($user_id) ;
                    $myDepartmentData = $departmentData[$admin_info['user_department_id']] ;
                    if(empty($myDepartmentData)){
                        $rt['code'] = 442 ;
                        $rt['msg'] = '未找到所属部门' ;
                        return $rt ;
                    }else {
                        if($myDepartmentData['level'] == 1){
                            $params['is_check_department1'] = ($datas['is_check_department1'] == 1 ) ? 1 : 0 ;
                            $params['is_check_department2'] = ($datas['is_check_department2'] == 1 ) ? 1 : 0 ;
                            $params['is_check_department3'] = ($datas['is_check_department3'] == 1 ) ? 1 : 0 ;
                        }else if($myDepartmentData['level'] == 2){
                            $params['is_check_department1'] =  0 ;
                            $params['is_check_department2'] = ($datas['is_check_department2'] == 1 ) ? 1 : 0 ;
                            $params['is_check_department3'] = ($datas['is_check_department3'] == 1 ) ? 1 : 0 ;
                        }else if($myDepartmentData['level'] == 3){
                            $params['is_check_department3'] = 1 ;
                        }
                    }
                }
                if( empty($params['is_check_department1']) && empty($params['is_check_department2']) && empty($params['is_check_department3']) ){
                    $rt['code'] = 443 ;
                    $rt['msg'] = '请勾选需展示的部门等级' ;
                    return $rt ;
                }
            }
        }else{
            $params['is_check_department1'] = 0 ;
            $params['is_check_department2'] = 0 ;
            $params['is_check_department3'] = 0 ;
        }
        $rt = array() ;
        $rt['code'] = 200 ;
        if(!empty($user_id)){
            $params['user_id'] = $user_id ;
        }
        $ark_name = trim($datas['ark_name']) ;
        if($is_edit == 1){
            if(empty($ark_name)){
                $rt['code'] = 421 ;
                $rt['msg'] = '报表名称不能为空' ;
                return $rt ;
            }elseif(mb_strlen($ark_name) > 60){
                $rt['code'] = 422 ;
                $rt['msg'] = '报表名称最多60字符' ;
                return $rt ;
            }
        }
        $template_type = intval($datas['template_type']) ;
        if(!empty($template_type)){
            if(empty($ark_config['template_type'][$template_type])){
                $rt['code'] = 435 ;
                $rt['msg'] = '模板类型参数错误' ;
                return $rt ;
            }
        }
        $params['ark_name'] = $ark_name ;
        $params['template_type'] = $template_type ;
        $params['count_dimension'] = trim($datas['count_dimension']) ; //统计维度
        $params['count_periods'] = intval($datas['count_periods']) ; //统计周期

        $remark = trim($datas['remark']) ;
        if(mb_strlen($remark) > 300){
            $rt['code'] = 423 ;
            $rt['msg'] = '备注最多300字符' ;
            return $rt ;
        }
        $params['remark'] = $remark ;

        $currency_code = trim($datas['currency_code']) ;
        if(empty($currency_code)){
            $rt['code'] = 424 ;
            $rt['msg'] = '请选择币别' ;
            return $rt ;
        }
        $params['currency_code'] =  $currency_code ;

        $sale_datas_origin = intval($datas['sale_datas_origin']) ;
        $params['sale_datas_origin'] =  ($sale_datas_origin == 1) ? 1 : 2 ;

        $refund_datas_origin = intval($datas['refund_datas_origin']) ;
        $params['refund_datas_origin'] =  ($refund_datas_origin == 1) ? 1 : 2 ;

        $finance_datas_origin = intval($datas['finance_datas_origin']) ;
        $params['finance_datas_origin'] =  ($finance_datas_origin == 1) ? 1 : 2 ;

        $cost_count_type= intval($datas['cost_count_type']) ;
        $params['cost_count_type'] =  ($cost_count_type == 1) ? 1 : 2 ;

        if($cost_count_type == '2' && ($params['sale_datas_origin'] == 1 || $params['refund_datas_origin'] == 1 || $params['finance_datas_origin'] == 1)){
            $rt['code'] = 430 ;
            $rt['msg'] = '先进先出的成本计算统计口径均为费用产出时间' ;
            return $rt ;
        }

        if($datas['sort'] == 'fba_sales_day'){
            $rt['code'] = 432 ;
            $rt['msg'] = '可售天数不支持排序' ;
            return $rt ;
        }

        $time_type = intval($datas['time_type']) ;
        $params['time_type'] =  $time_type ; //相对时间 99-自定义数据

        if($time_type == 99){
            $end_time_arr = explode('-' , $datas['search_end_time']) ;
            if($datas['count_periods'] == 5){  //只显示年
                $start_time_stamp = strtotime($datas['search_start_time'].'-01') ; //开始时间戳
                $end_time_stamp = strtotime($datas['search_end_time'].'-01') ; //结束时间戳
            }else{
                $start_time_stamp = strtotime($datas['search_start_time']) ; //开始时间戳
                $end_time_stamp = strtotime($datas['search_end_time']) ; //结束时间戳
            }
            if($start_time_stamp == 0 || $end_time_stamp == 0){
                $rt['code'] = 425 ;
                $rt['msg'] = '筛选时间未选择' ;
                return $rt ;
            }
            $params['search_start_time'] = $start_time_stamp ;

            if($datas['count_periods'] == 5){ //只显示年
                $params['search_end_time'] =  strtotime('+1 year',$end_time_stamp) - 1 ;
            }else if($datas['count_periods'] == 4 || $datas['count_periods'] == 3 || $datas['cost_count_type'] == 2){ //只显示年月,先进先出
                $params['search_end_time'] = strtotime('+1 month',$end_time_stamp) - 1 ;
            }else{  //显示年月日
                $params['search_end_time'] = $end_time_stamp + 24*3600 - 1  ;
            }
        }else{
            $params['search_start_time'] = 0 ;
            $params['search_end_time'] = 0 ;
        }
        //校验时间范围
        $time_check = $this->checkTimesLimit($datas['count_periods'] , $time_type , $params['search_start_time'] , $params['search_end_time'] ) ;
        if($time_check['code'] != 200){
            return $time_check ;
        }

        if( $params['count_dimension'] == 'group' && $currency_code == 'ORIGIN'){
            $rt['code'] = 428 ;
            $rt['msg'] = '分组统计必须设置为统一货币单位' ;
            return $rt ;
        } else if( $params['count_dimension'] == 'tags' && $currency_code == 'ORIGIN'){
            $rt['code'] = 428 ;
            $rt['msg'] = '标签统计必须设置为统一货币单位' ;
            return $rt ;
        }else if( $params['count_dimension'] == 'isku' && $currency_code == 'ORIGIN'){
            $rt['code'] = 428 ;
            $rt['msg'] = 'ISKU统计必须设置为统一货币单位' ;
            return $rt ;
        }else if( $params['count_dimension'] == 'operators' && $currency_code == 'ORIGIN'){
            $rt['code'] = 428 ;
            $rt['msg'] = '运营人员统计必须设置为统一货币单位' ;
            return $rt ;
        }else if( $params['count_dimension'] == 'class1' && $currency_code == 'ORIGIN'){
            $rt['code'] = 428 ;
            $rt['msg'] = '一级类目统计必须设置为统一货币单位' ;
            return $rt ;
        }else if( $params['count_dimension'] == 'site_group' && $currency_code == 'ORIGIN'){
            $rt['code'] = 428 ;
            $rt['msg'] = '站点统计必须设置为统一货币单位' ;
            return $rt ;
        }else if(in_array($params['count_dimension'] , ['sku' , 'asin' , 'parent_asin']) && $currency_code == 'ORIGIN' && intval($datas['is_distinct_channel']) == 0 ){
            $rt['code'] = 428 ;
            $rt['msg'] = $params['count_dimension'].'维度统计不区分店铺时，只能使用统一货币' ;
            return $rt ;
        }
        $is_distinct_channel = intval($datas['is_distinct_channel']) ;
        $params['is_distinct_channel'] = ($is_distinct_channel == 1) ? 1 : 0 ;

        $show_type = intval($datas['show_type']) ;
        $params['show_type'] = ($show_type == 1) ? 1 : 2 ;

        $time_target = trim($datas['time_target']) ;
        if( $show_type == '1' && (empty($time_target) || $time_target == '请选择' )){
            $rt['code'] = 426 ;
            $rt['msg'] = '指标筛选不能为空' ;
            return $rt ;
        }

        $params['time_target'] = empty($time_target) ? '' :  $time_target;

        $target = trim($datas['target']) ;
        if(empty($target)){
            $rt['code'] = 425 ;
            $rt['msg'] = '自定义指标不能为空' ;
            return $rt ;
        }

        $target_arr = explode(',' , $target) ;

        if((in_array('sale_order_number' , $target_arr) || in_array('sale_sales_dollars' , $target_arr)) && $params['sale_datas_origin'] == 2){
            $rt['code'] = 430 ;
            $rt['msg'] = '销售统计维度为费用产生时间 ， 订单量和订单金额不可选' ;
            return $rt ;
        }

        $params['target'] = $target ;

        $final_target =  ($show_type == 1) ? explode(',' , $time_target) :  explode(',' , $target) ;
        $where_detail = is_array($datas['where_detail']) ? $datas['where_detail'] : json_decode($datas['where_detail'] , true) ;
        if(!empty($where_detail)){
            if(!empty($where_detail['target'])){
                foreach($where_detail['target'] as $kt=>$wtarget){
                    if(isset($wtarget['key']) && !empty($targetData[$wtarget['key']])) {
                        $where_detail['target'][$kt]['name'] = $targetData[$wtarget['key']]['name'] ;
                    }else{
                        $rt['code'] = 430 ;
                        $rt['msg'] = '指标不存在' ;
                        return $rt ;
                    }
                    if(!in_array($wtarget['key'] , $final_target)){
                        $rt['code'] = 431 ;
                        $rt['msg'] = '未选择指标不允许筛选！' ;
                        return $rt ;
                    }
                    if($wtarget['formula'] == 'eq'){
                        $where_detail['target'][$kt]['formula'] = '=' ;
                    }else if($wtarget['formula'] == 'egt'){
                        $where_detail['target'][$kt]['formula'] = '>=' ;
                    }else if($wtarget['formula'] == 'elt'){
                        $where_detail['target'][$kt]['formula'] = '<=' ;
                    }else if($wtarget['formula'] == 'gt'){
                        $where_detail['target'][$kt]['formula'] = '>' ;
                    }else if($wtarget['formula'] == 'lt'){
                        $where_detail['target'][$kt]['formula'] = '<' ;
                    }else{
                        $where_detail['target'][$kt]['formula'] = trim($wtarget['formula']) ;
                    }
                    $where_detail['target'][$kt]['value'] = round($wtarget['value'] , 4) ;
                }
            }
            if(!empty($where_detail['channel_id']) && is_array($where_detail['channel_id'])){
                $where_detail['channel_id'] = implode(',' , $where_detail['channel_id']) ;
            }
            if(!empty($where_detail['site_id']) && is_array($where_detail['site_id'])){
                $where_detail['site_id'] = implode(',' , $where_detail['site_id']) ;
            }
            if(!empty($where_detail['country_site']) && is_array($where_detail['country_site'])){
                $where_detail['country_site'] = implode(',' , $where_detail['country_site']) ;
            }
            if(!empty($where_detail['transport_mode']) && is_array($where_detail['transport_mode'])){
                $where_detail['transport_mode'] = implode(',' , $where_detail['transport_mode']) ;
            }
            if(!empty($where_detail['is_care']) && is_array($where_detail['is_care'])){
                $where_detail['is_care'] = implode(',' , $where_detail['is_care']) ;
            }
            if(!empty($where_detail['is_new']) && is_array($where_detail['is_new'])){
                $where_detail['is_new'] = implode(',' , $where_detail['is_new']) ;
            }
            if(!empty($where_detail['group_id']) && is_array($where_detail['group_id'])){
                $where_detail['group_id'] = implode(',' , $where_detail['group_id']) ;
            }
            if(!empty($where_detail['tag_id']) && is_array($where_detail['tag_id'])){
                $where_detail['tag_id'] = implode(',' , $where_detail['tag_id']) ;
            }
            if(!empty($where_detail['operators_id']) && is_array($where_detail['operators_id'])){
                $where_detail['operators_id'] = implode(',' , $where_detail['operators_id']) ;
            }

        }
        $params['where_detail']  = $where_detail ;


        if($show_type == '1' && ($time_target == 'fba_sales_stock' || $time_target == 'fba_sales_day' || $time_target == 'fba_reserve_stock' || $time_target == 'fba_recommended_replenishment' || $time_target == 'fba_special_purpose' || $time_target == 'fba_goods_value' || $time_target == 'fba_stock' || $time_target == 'fba_need_replenish' || $time_target == 'fba_predundancy_number') ){
            $rt['code'] = 427 ;
            $rt['msg'] = '库存情况为即时数据，不支持按时间展示' ;
            return $rt ;
        }

        if($show_type == '2' && $datas['count_periods'] == '0'){
            $sort_target = trim($_REQUEST['sort_target']) ;
            if(!empty($sort_target) && empty($targetData[$sort_target])){
                $rt['code'] = 431 ;
                $rt['msg'] = '排序指标参数错误' ;
                return $rt ;
            }else if(!empty($sort_target) && $targetData[$sort_target]['is_sort'] == 0){
                $rt['code'] = 432 ;
                $rt['msg'] = '该指标不支持排序' ;
                return $rt ;
            }
            $params['sort_target'] = $sort_target ;
            $sort_order = trim($_REQUEST['sort_order']) ;
            $params['sort_order'] = empty($sort_order) ? 'desc' : $sort_order ;
            $limit_num = intval($_REQUEST['limit_num']) ;
            if($limit_num > 100){
                $rt['code'] = 433 ;
                $rt['msg'] = '限制条数最多100条' ;
                return $rt ;
            }
            $params['limit_num'] = $limit_num ;
        }else{
            $params['sort_target'] = '' ;
            $params['sort_order'] = '' ;
            $params['limit_num'] = 0 ;
        }

        $params['modified_time'] = time() ;
        if(!empty($admin_id)){
            $params['modified_admin_id'] = $admin_id ;
        }
        if(!empty($admin_name)){
            $params['modified_admin_name'] = $admin_name ;
        }
        $params['is_default'] = 0 ;
        $rt['params'] = $params ;
        return $rt ;
    }

    // done
    protected function getDevelopmentData($user_id)
    {
        $key = "deparmentData_{$user_id}";
        $deparmentData = $this->redis->get($key);
        if($deparmentData){
            return $deparmentData ;
        }else{
            $sql = 'select id,parent_id,level,department_name from erp_base.b_user_department where user_id=? and status in (1,2)';
            $department_list = DB::query($sql, [$user_id]);
            $deparmentData =array() ;
            if(!empty($department_list)){
                $deparmentData = array_column($department_list,null,'id');
            }
            $this->redis->set($key, $deparmentData);
            return $deparmentData ;
        }
    }

    /**
     * done
     * 检验限制时间范围
     * @param int $count_periods
     * @param int $time_type
     * @param $start_time
     * @param $end_time
     * @author: LWZ
     */
    protected function checkTimesLimit($count_periods = 0 , $time_type = 99 , $start_time = 0 , $end_time = 0  )
    {
        if($time_type != 99){
            $time_arr = $this->parseTimeType($time_type) ;
            $start_time = $time_arr['start'] ;
            $end_time = $time_arr['end'] ;
        }
        $rt = array() ;
        $rt['code'] = 200 ;
        $start_time_limit = strtotime('2019-12-07') ;
        if($start_time_limit > $start_time){
            $rt['code'] = 436 ;
            $rt['msg'] = '报表的数据仅从报表的数据仅从2019年12月07日起，请重新选择查询的起始时间。' ;
        }
        if($count_periods == 0 ){  // 无周期 ， 最多不超过一年（366天）
            $num = intval(($end_time - $start_time + 1) / (24*3600)) ;
            if($num > 366){
                $rt['code'] = 431 ;
                $rt['msg'] = '筛选时间范围最多不能超过1年' ;
            }
        }else if($count_periods == 1){ //按天 , 筛选时间范围最多不能超过92天
            $num = intval(($end_time - $start_time + 1) / (24*3600)) ;
            if($num > 92){
                $rt['code'] = 432 ;
                $rt['msg'] = '按天筛选时间范围最多不能超过92天' ;
            }
        }else if($count_periods == 2){ //按周 , 筛选时间范围最多不能超过52周
            $num = intval(($end_time - $start_time + 1) / (7*24*3600)) ;
            if($num > 52){
                $rt['code'] = 433 ;
                $rt['msg'] = '按周筛选时间范围最多不能超过52周' ;
            }
        }else if($count_periods == 3){ //按月 ， 筛选时间范围最多不能超过12月
            $start_arr = explode('-' , date('Y-m' , $start_time)) ;
            $end_arr = explode('-' , date('Y-m' , $end_time)) ;
            $num = ($end_arr[0] - $start_arr[0]) * 12 +   $end_arr[1] - $start_arr[1] ;
            if($num > 12){
                $rt['code'] = 434 ;
                $rt['msg'] = '按月筛选时间范围最多不能超过12个月' ;
            }
        }else if($count_periods == 4){ //按季
            $start_arr = explode('-' , date('Y-m' , $start_time)) ;
            $end_arr = explode('-' , date('Y-m' , $end_time)) ;
            $num = intval((($end_arr[0] - $start_arr[0]) * 12 +   $end_arr[1] - $start_arr[1])/3 );
            if($num > 4){
                $rt['code'] = 435 ;
                $rt['msg'] = '按季筛选时间范围最多不能超过4个季度' ;
            }
        }
        return $rt ;
    }

    // done
    protected function parseTimeType($type, $start_time = '', $end_time = '')
    {
        switch ($type) {
        case 0:  //全部
            $start = 0 ;
            $end = time() + 24*3600 ;
            break ;
        case 1:  // 一年
            $start = strtotime(date("Y-m-d",strtotime("-1 year")));
            $end   = $this->sysTime;
            break;
        case 2:  // 今天
            $start = strtotime(date("Y-m-d",strtotime("today")));
            $end   = $start + 86399;
            break;
        case 3:  // 昨天
            $start = strtotime(date("Y-m-d",strtotime("-1 day")));
            $end   = $start + 86399;
            break;
        case 4:  // 近7天
            $start = strtotime(date("Y-m-d",strtotime("-7 day")));
            $end   = strtotime(date("Y-m-d",strtotime("-1 day"))) + 86399;
            break;
        case 5:  // 近15天
            $start = strtotime(date("Y-m-d",strtotime("-15 day")));
            $end   = strtotime(date("Y-m-d",strtotime("-1 day"))) + 86399;
            break;
        case 6:  // 近30天
            $start = strtotime(date("Y-m-d",strtotime("-30 day")));
            $end   = strtotime(date("Y-m-d",strtotime("-1 day"))) + 86399;
            break;
        case 7:  // 近60天
            $start = strtotime(date("Y-m-d",strtotime("-60 day")));
            $end   = strtotime(date("Y-m-d",strtotime("-1 day"))) + 86399;
            break;
        case 8:  // 近90天
            $start = strtotime(date("Y-m-d",strtotime("-90 day")));
            $end   = strtotime(date("Y-m-d",strtotime("-1 day"))) + 86399;
            break;
        case 9:  // 本月
            $start = strtotime(date("Y-m",time()));
            $end   = $this->sysTime;
            break;
        case 10:  // 上个月
            $start =  strtotime("-1 month", strtotime(date("Y-m", time())));
            $end   = strtotime(date("Y-m",time()))-1;
            break;
        case 11:  // 今年
            $start = strtotime(date('Y-01-01'));
            $end   = $this->sysTime;
            break;
        case 12:  // 去年
            $start = strtotime(date("Y-01-01",strtotime(date('Y-01-01'))-1));
            $end   = strtotime(date('Y-01-01'))-1;
            break;
        case 13://上周的时间范围
            if (date('w') == '1') {
                //今天是周一
                $start  = strtotime(date('Y-m-d 00:00:00', time()-7*24*3600)); //上周一
                $end = strtotime(date('Y-m-d 23:59:59', (strtotime("-1 week Sunday") + 86399))) ;//上周天
            } else {
                $start = strtotime(date('Y-m-d 00:00:00', strtotime("-2 week Sunday")+24*3600)); //上周一
                $end = strtotime(date('Y-m-d 23:59:59', (strtotime("-2 week Sunday") + 7*86400+86399)) );//上周日
            }
            break;
        case 18:  // 近180天
            $start = strtotime(date("Y-m-d",strtotime("-180 day")));
            $end   = strtotime(date("Y-m-d",strtotime("-1 day"))) + 86399;
            break;
        case 20 : //本季度
            $season = ceil((date('n' ,time()))/3);//当月是第几季度
            $start = strtotime(date("Y-m-d 00:00:00", mktime(0, 0, 0,$season*3-3+1,1,date('Y'))));
            $end = strtotime(date("Y-m-d 23:59:59", (mktime(0, 0, 0,$season*3+1,1,date('Y')) - 1))) ;
            break;
        case 21: //上季度
            $season = ceil((date('n' , time()))/3)-1;
            $start = strtotime(date("Y-m-d 00:00:00", mktime(0, 0, 0,$season*3-3+1,1,date('Y'))));
            $end = strtotime(date("Y-m-d 23:59:59", (mktime(0, 0, 0,$season*3+1,1,date('Y')) - 1))) ;
            break;
        case 22: // 近3个月
            $start = strtotime(date("Y-m-d 00:00:00", strtotime("-2 month", strtotime(date("Y-m")))));
            $end = strtotime(date("Y-m-d 23:59:59", time()));
            break;
        case 77:  // 上周同日
            $start = strtotime(date("Y-m-d",strtotime("-7 day")));
            $end   = $start + 86399;
            break;
        case 88: //本周
            if (date('w') == '1') {
                //今天是周一
                $start = strtotime(date("Y-m-d"));
                $end = strtotime(date("Y-m-d")) + 86399;
            } else {
                //获取上周天日期
                $start = strtotime("-1 week Sunday") + 24*3600;
                $end = strtotime(date("Y-m-d",strtotime("today")))+86399 ;
            }
            break ;
        case 99:  // 自定义
            $start = strtotime($start_time);
            $end   = strtotime($end_time) + 86399;
            break;
        default :  // 默认今天
            $start = strtotime(date("Y-m-d",strtotime("today")));
            $end   =  $start + 86399;
            break;
        }

        $time_range = [
            'start' => $start,
            'end'   => $end,
            'type'  => $type
        ];

        return $time_range;
    }

    protected function getChannelListByParams2($request = array())
    {
        $user_id = $this->user_id;
        $is_master = $this->userInfo['is_master'];
        $is_get_all_channel = ($request['is_get_all_channel'] && $request['is_get_all_channel'] == 1) ? 1 : 0;//获取所有店铺1是

        //当子账号也需获取所有店铺时传值
        if ($request['is_master'] == '1' or (int)$request['admin_id'] > 0) {
            $is_master = 1;
        }
        if (isset($request['user_id']) && !empty($request['user_id'])) {
            $user_id = $request['user_id'];
        }
        if (empty($this->_admin_id)) {
            $this->_admin_id = $this->userInfo['admin_id'];
        }
        if (empty($this->_admin_id)) {
            $this->_admin_id = intval($request['admin_id']);
        }

        /*-------------------将查询条件做缓存键并查询---------------------------*/
        // 将查询条件做缓存键
        $admin_id_temp = empty($request['admin_id']) ? $this->_admin_id : $request['admin_id'];
        $country_site  = !empty($request['country_site']) ? $request['country_site'] : '';
        $site_id       = !empty($request['site_id']) ? $request['site_id'] : '';
        $department_id = (int)$request['common_department_id'];
        // 按店铺（店铺可多选）
        if ($request['channel_id'] == 'all') {
            $request['channel_id'] = '';
        }
		if (isset($request['all_channel_status']) && $request['all_channel_status'] == 1) {
            $all_channel_status = 1;
        }
		else
		{
			$all_channel_status = 0;
		}
        if ($request['channel_id'] == 'undefined') {
            $request['channel_id'] = 0;
        }
        if (is_array($request['channel_id'])) {
            $channel_id = implode(',', $request['channel_id']);
        } else {
            $channel_id = $request['channel_id'];
        }
        if (empty($channel_id)) {
            $channel_id = 0;
        }
        $param_arr = [
            'user_id'            => $user_id,
            'is_master'          => $is_master,
            'admin_id'           => $admin_id_temp,
            'country_site'       => $country_site,
            'site_id'            => $site_id,
            'channel_id'         => $channel_id,
            'department_id'      => $department_id,
            'is_get_all_channel' => $is_get_all_channel,
            'all_channel_status' => $all_channel_status,
        ];

        $arr_temp = implode('_', $param_arr) . "_version2";

        $redis_key = 'ChannelPrivs_' . $user_id . '_' . md5($arr_temp);
        // 取缓存，缓存失效或不存在则从新读取
        $channel_arr = $this->redis->get($redis_key);
        if ($channel_arr) {
            return ['channel_arr' => $channel_arr, 'IsSuccess' => true, 'msg' => '取满足查询条件的缓存店铺'];
        }
        /*--------------------------查询条件解析------------------------------*/
        // 获取五大站点及对应的国家
        $amzon_site_country = $this->amzon_site_country;
        $amzon_site_ids     = array_keys($amzon_site_country);
		if($all_channel_status == 1)
		{
			$where              = $where1 = "user_id = '" . $user_id . "' and status in (0,1) ";
		}
		else
		{
			$where              = $where1 = "user_id = '" . $user_id . "' and status = 1 ";
		}
        // 按站点查询
        if (isset($request['country_site']) && !empty($request['country_site']) && in_array($request['country_site'], $amzon_site_ids) && (!isset($request['site_id']) || empty($request['site_id']))) {
            // 该站点对应的国家站点
            $site_ids = array_column($amzon_site_country[$request['country_site']]['country'], 'id');
            $where1   .= " and site_id in (" . implode(',', $site_ids) . ")";
        } else if (!empty($request['site_id'])) { // 按国家
            $where1 .= " and site_id = '" . intval($request['site_id']) . "'";
        }
        //按部门查询
        if ($department_id > 0) {
            $channel_id            = $this->getChannelIdByDepartmentId($user_id, $this->_admin_id, $department_id);
            $is_master             = 1;
        }


        if (isset($channel_id) && !empty($channel_id)) {
            $where1 .= " and id in (" . $channel_id . ")";
        }
        $this->redis->set($redis_key, '');
        /*----------------------查询店铺数据并做缓存存储------------------------*/
        // 满足条件的店铺id
        $sql = 'select id,site_id,title,Merchant_ID from erp_base.b_channel where ' . $where1;
        $channel_arr = DB::query($sql);
        if (empty($channel_arr)) {
            return ['channel_arr' => [], 'IsSuccess' => false, 'data_type' => 2, 'msg' => L('unsearch_channel_change_condition')];
        }
        if (!empty($channel_arr)) {
            $ids = array_column($channel_arr, 'id');
            // 主账号登录
            if (!empty($is_master)) {
                // 按船长子账号查询
                if (isset($request['admin_id']) && !empty($request['admin_id']) && $is_get_all_channel != 1) {
                    $select_admin_id = intval($request['admin_id']);
                    // 子账号授权的店铺
                    $sub_account_channel = $this->get_channel_priv($select_admin_id);
                    // 满足条件的店铺id数组
                    $common_ids = array_values(array_intersect($ids, $sub_account_channel[1]));
                    if (empty($common_ids)) {
                        return ['channel_arr' => [], 'IsSuccess' => false, 'data_type' => 2, 'msg' => L('child_acount_no_priv')];
                    }
                    // 满足条件的店铺数据
                    $where3      = $where . " and id in(" . implode(',', $common_ids) . ")";
                    $sql = 'select id,site_id,title,Merchant_ID from erp_base.b_channel where ' . $where3;
                    $channel_arr = DB::query($sql);
                }
            } else {
                // 子账号登录：子账号授权的店铺
                $sub_account_channel = $this->get_channel_priv($this->_admin_id);
                // 满足条件的店铺id数组
                $common_ids = array_values(array_intersect($ids, $sub_account_channel[1]));
                if (empty($common_ids)) {
                    return ['channel_arr' => [], 'IsSuccess' => false, 'data_type' => 2, 'msg' => L('acount_no_priv')];
                }

                $where4      = $where . " and id in(" . implode(',', $common_ids) . ")";
                $sql = 'select id,site_id,title,Merchant_ID from erp_base.b_channel where ' . $where4;
                $channel_arr = DB::query($sql);
            }
        }
        if (empty($channel_arr)) {
            return ['channel_arr' => [], 'IsSuccess' => false, 'data_type' => 2, 'msg' => '该搜索条件下暂无店铺，请切换其他搜索条件！'];
        }

        //添加站点ID信息
        if (!empty($channel_arr)) {
            $fba_area_ids = $this->fba_area_ids;
            foreach ($channel_arr as $ck => $channel_da) {
                $channel_arr[$ck]['area_id'] = intval($fba_area_ids[$channel_da['site_id']]);
            }
        }

        // 以查询条件为键，店铺信息为值，作缓存
        $this->redis->set($redis_key, $channel_arr, 60 * 60);
        return ['channel_arr' => $channel_arr, 'IsSuccess' => true, 'msg' => '查询到以下满足条件的店铺'];
    }

    protected function getChannelIdByDepartmentId($user_id,$admin_id = 0,$department_id = 0,$status = "status = 1")
    {
        $sql = 'select is_responsible,user_department_id,is_master from erp_base.b_user_admin where id=? and user_id=? and status=1';
        $user_admin_data = DB::fetch($sql, [$admin_id, $user_id]);
        if (!$user_admin_data){
            return -1;
        }
        $is_master = $user_admin_data['is_master'];
        $is_response                = $user_admin_data['is_responsible'];
        $responsible_department_id  = $user_admin_data['user_department_id'];
        if ($is_response == 0 and $is_master == 0){
            return -1;
        }
        $sql = "select id,parent_id,level from erp_base.b_user_department where user_id=? and {$status} and id=?";
        $lists = DB::fetch($sql, [$user_id, $department_id]);
        if (!$lists){
            return  -1;
        }
        if ($responsible_department_id != $department_id and $is_master == 0){//不相等的情况需找对应的父级,不为主账号
            if ($lists['level'] == 2 && $lists['parent_id'] != $responsible_department_id){//若为二级，其父id不为负责的id
                return  -1;
            }
            if ($lists['level'] == 3 && $lists['parent_id'] != $responsible_department_id){//若为三级且其父id不为负责的id，再往上找一层
                $sql = "select id,parent_id,level from erp_base.b_user_department where user_id=? and {$status} and id=?";
                $lists_parent = DB::fetch($sql, [$user_id, $lists['parent_id']]);
                if (!$lists_parent){
                    return  -1;
                }
                if ($lists_parent['parent_id'] != $responsible_department_id){//均找不到父级的情况
                    return  -1;
                }
            }
        }
        $department_id_arr = array($department_id);
        if ($lists['level'] < 3 ){//一二级的情况需再查询子部门
            $sql = "select id,parent_id,level from erp_base.b_user_department where user_id=? and {$status} and parent_id=?";
            $lists_child = DB::query($sql, [$user_id, $department_id]);
            if (!empty($lists_child)){
                $lists_child_id_arr = array_column($lists_child,'id');
                $department_id_arr = array_merge($department_id_arr,$lists_child_id_arr);
                if ($lists_child[0]['level'] == 2){//二级需再往下找到三级
                    $sql = "select id,parent_id,level from erp_base.b_user_department where user_id=? and {$status} and parent_id in (" . implode(',', $lists_child_id_arr) . ")";
                    $lists_child = DB::query($sql, [$user_id]);
                    if (!empty($lists_child)){
                        $lists_child_id_arr = array_column($lists_child,'id');
                        $department_id_arr = array_merge($department_id_arr,$lists_child_id_arr);
                    }
                }
            }

        }

        $department_id_str = implode(',', $department_id_arr);
        $sql = <<<SQL
select IFNULL( group_concat( id ), '' ) AS user_id ,IFNULL( group_concat( check_prv_ids ), '' ) AS check_prv_ids ,IFNULL(MAX(is_master),0) as is_master
  from erp_base.b_user_admin
 where user_id=? and status=1 and user_department_id IN ($department_id_str)
SQL;
        $user_data = DB::fetch($sql, [$user_id]);
        if (!$user_data){
            return -1;
        }
        if ($user_data['is_master'] == 1){
            $channel_id = 0;//全部
        }else{
            if (empty($user_data['check_prv_ids'])){
                return -1;
            }
            $channel_id_arr = array();
            foreach (explode(",",$user_data['check_prv_ids']) as $value){
                $channel_id_arr[] = (int)$value;
            }
            $channel_id = implode(",",array_unique($channel_id_arr));

        }
        return $channel_id;
    }

    /**
     * 获得登陆者ID所授权的所有店铺的权限
     * @param int   $admin_id
     * @param array $site_id_arr
     * @return mixed
     */
    protected function get_channel_priv($admin_id = 0, $site_id_arr = array())
    {
        if (empty($admin_id)) {
            $admin_id = 0 ;
        }
        $sql = 'select check_prv_ids,user_id from erp_base.b_user_admin where id=?';
        $user_data = DB::fetch($sql, [$admin_id]);
        if (!empty($user_data["check_prv_ids"])) {
            $channel_id_arr = array_values(array_unique(array_diff(explode(",", $user_data["check_prv_ids"]), array(""))));

            $where = "user_id = '".$user_data['user_id']."' and channel_type = 2 and status = 1 and id in(".implode(',', $channel_id_arr).")";
            if (!empty($site_id_arr)) {
                $where .= " and site_id in (".implode(',', $site_id_arr).")";
            }
            $sql = 'select id,title from erp_base.b_channel where ' . $where;
            $channel_ids = DB::query($sql);
            if (!empty($channel_ids)) {
                $arrk = array_column($channel_ids, "id");
                $r    = implode(",", $arrk);
                $idx_id_title = array_column($channel_ids, "title", "id");
            }else{
                $arrk = array(0);
                $r    = 0;
                $idx_id_title = [];
            }
        } else {
            $r = 0;
            $arrk = array(0);
            $idx_id_title = [];
        }
        $arr[0] = $r;
        $arr[1] = $arrk;
        $arr[2] = array(-1);
        $arr[3] = $idx_id_title;

        return $arr;
    }

    protected function returnDatas($rt = '' , $code= '' , $msg = '' , $otherParams = array(),$type = 99)
    {
        if(!empty($rt)){
            $type = 99 ;
        }
        $result = array();
        $code = empty($code) ? 200 : $code ;
        if($code == 200){
            $result['IsSuccess'] = true;
            $result['IsSucess'] = true;
            $result['IsSuccess'] = true;
        }else{
            $result['IsSuccess'] = false;
            $result['IsSucess'] = false;
            $result['IsSuccess'] = false;
        }
        $result['code'] = $code ;
        $result['data'] = $rt ;
        $result['msg'] = $msg;
        if($type == 99 && $code != 200){
            $type = 0 ;
        }
        $result['_type'] = $type;
        $tips = $this->getTips($type);
        if (!empty($tips)){
            $result['tips'] = $tips;
        }
        if(!empty($otherParams) && is_array($otherParams)){
            foreach($otherParams as $k=>$param){
                $result[$k] = $param ;
            }
        }
        $result['times'] = $this->execute_time();
        die(json_encode($result , 256));
    }

    protected function getTips($type){
        $return = array();
        $tips = $this->tips;
        if (isset($tips['tips'][$type])){
            $return = $tips['tips'][$type];
        }
        $m = $_REQUEST['m'];
        $c = $_REQUEST['c'];
        $a = $_REQUEST['a'];

        if (isset($tips[$m."-".$c."-".$a][$type]['img'])){//自定义数据
            $return['img'] = $tips[$m."-".$c."-".$a][$type]['img'];
        }elseif (isset($tips[$m."-".$c][$type]['tips_operate'])){
            $return['img'] = $tips[$m."-".$c][$type]['img'];
        }elseif (isset($tips[$m][$type]['tips_operate'])){
            $return['img'] = $tips[$m][$type]['img'];
        }

        if (isset($tips[$m."-".$c."-".$a][$type]['tips'])){//自定义数据
            $return['tips'] = $tips[$m."-".$c."-".$a][$type]['tips'];
        }elseif (isset($tips[$m."-".$c][$type]['tips'])){
            $return['tips'] = $tips[$m."-".$c][$type]['tips'];
        }elseif (isset($tips[$m][$type]['tips'])){
            $return['tips'] = $tips[$m][$type]['tips'];
        }

        if (isset($tips[$m."-".$c."-".$a][$type]['tips_operate'])){//自定义数据
            $return['tips_operate'] = $tips[$m."-".$c."-".$a][$type]['tips_operate'];
        }elseif (isset($tips[$m."-".$c][$type]['tips_operate'])){
            $return['tips_operate'] = $tips[$m."-".$c][$type]['tips_operate'];
        }elseif (isset($tips[$m][$type]['tips_operate'])){
            $return['tips_operate'] = $tips[$m][$type]['tips_operate'];
        }

        return $return;
    }

    /**
     * 程序执行时间
     * @return	int	单位ms
     */
    protected function execute_time() {
        $stime = explode(' ', $this->sysStartTtime);
        $etime = explode(' ', microtime());
        return number_format(($etime [1] + $etime [0] - $stime [1] - $stime [0]), 2);
    }

    /**
     * function getUnGoodsDatas
     * 获取非商品维度数据信息
     * @author: LWZ
     *
     * @param string $where
     * @param array $datas
     * @param int $page
     * @param int $row
     * @param string $sort
     * @param string $order
     * @param int $count_tip
     * @param array $channel_arr
     * @return mixed
     */
    protected function getUnGoodsDatas($where = '' , $datas = array() ,  $page = 1 , $row = 100 , $sort = '' ,$order = '' , $count_tip = 0,$channel_arr = array())
    {
        $limit_num = 0 ;
        if($datas['show_type'] == 2 && $datas['limit_num'] > 0 && $datas['count_periods'] == 0 ){
            $limit_num = $datas['limit_num'] ;
        }
        if($limit_num > 0 ){
            $limit = $limit_num ;
        }else{
            $limit = $row . ' OFFSET  ' . ( ( $page - 1 ) * $row  ) ;
        }
        if($datas['time_type'] == 99) {
            $where.= empty($where) ? (' report.create_time >= ' .$datas['search_start_time'] . ' AND report.create_time <= ' . $datas['search_end_time']) : ('  AND report.create_time >= ' .$datas['search_start_time'] . ' AND report.create_time <= ' . $datas['search_end_time']) ;
            $datas['origin_where'].= '  AND report.create_time >= ' .$datas['search_start_time'] . ' AND report.create_time <= ' . $datas['search_end_time'] ;
        }else{
            $amzon_site = $this->amzon_site;
            $all_site_ids = array_keys($amzon_site) ;
            $tims_arr = $this->_get_local_time_by_site_id($all_site_ids , $datas['time_type']) ;
            $w2 = array() ;
            foreach($tims_arr as $times){
                $w2[] = "( report.site_id IN (" . $times['site_id'] .") AND report.create_time >= " . $times['start'] . ' AND report.create_time <=' . $times['end'] . ")" ;
            }
            $where.= empty($where) ? implode(" OR " , $w2 ) : " AND ( " .  implode(" OR " , $w2 ) . " ) " ;
            $datas['origin_where'].= " AND ( " .  implode(" OR " , $w2 ) . " ) " ;
        }
        // todo point?
        $amazon_goods_finance_report_by_order_pg = base::load_model_class('amazon_goods_finance_report_by_order_pg' , 'datas_ark') ;
        $rt = $amazon_goods_finance_report_by_order_pg->getListByUnGoods($where , $datas ,  $limit ,$sort, $order , $count_tip,$channel_arr) ;
        if(!empty($rt['lists'])){
            if($datas['show_type'] == 2){
                $rt['lists'] = $this->formatTargetData($rt['lists'] , $datas) ;
            }else{
                $rt['lists'] = $this->formatTimeData($rt['lists'] , $datas) ;
            }

        }
        return $rt ;
    }

    /**
     * function _get_local_time_by_site_id
     *  获取站点的 本地时间
     * @param string $site_ids 站点ID , 可传数组或字符串 。 例： [1,2,3] 或 1,2,3
     * @param int $time_type 时间类型
     * @param int $start_time 开始时间戳（$time_type = 99 时必传）
     * @param int $end_time 结束时间戳（$time_type = 99 时必传）
     * @return array  例： array(2) {
     * [0] => array(3) {
     * ["start"] => int(1599062300)  //开始时间
     * ["end"] => int(1600358299)    //结束时间
     * ["channel_id"] => string(15) "1,2,3"  //站点ID
     * }
     * [1] => array(3) {
     * ["start"] => int(1599062400)  //开始时间
     * ["end"] => int(1600358399)    //结束时间
     * ["channel_id"] => string(28) "4,5,6"  //站点ID
     * }
     * }
     * @author: LWZ
     */
    protected function _get_local_time_by_site_id($site_ids = '', $time_type = 99, $start_time = 0, $end_time = 0)
    {
        if (!empty($site_ids)) {
            if (is_array($site_ids)) {
                $site_ids = implode(',', $site_ids);
            }
            if ($time_type == 99) {
                $rt[0]['site_id'] = $site_ids;
                $rt[0]['start']   = $start_time;
                $rt[0]['end']     = $end_time;
            } else {
                $site_arr        = explode(',', $site_ids);
                $site_time_datas = $this->getStartAndEndTimeAllSite($time_type);
                foreach ($site_arr as $site_id) {
                    $key = $site_time_datas[$site_id]['start'] . '_' . $site_time_datas[$site_id]['end'];
                    if (empty($time_datas[$key])) {
                        $time_datas[$key]['start']   = intval($site_time_datas[$site_id]['start']);
                        $time_datas[$key]['end']     = intval($site_time_datas[$site_id]['end']);
                        $time_datas[$key]['site_id'] = $site_id;
                    } else {
                        $time_datas[$key]['site_id'] = $time_datas[$key]['site_id'] . ' , ' . $site_id;
                    }
                }
                $rt = array_values($time_datas);
            }

        } else {
            $rt[0]['site_id'] = 0;
            $rt[0]['start']   = 0;
            $rt[0]['end']     = 0;
        }
        return $rt;
    }

    /**
     * 获得所有站点的时间控件选定的时间范围（综合看板多店铺使用）
     * @param int $type 时间类型
     * @return array
     */
    protected function getStartAndEndTimeAllSite($type = 1)
    {
        $now_int = time();
        $localDate = array();
        date_default_timezone_set("America/Los_Angeles");
        $localDate[1]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[1]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("America/Vancouver");
        $localDate[2]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[2]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("America/Mexico_City");
        $localDate[3]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[3]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("Europe/Berlin");
        $localDate[4]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[4]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("Europe/Madrid");
        $localDate[5]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[5]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("Europe/Paris");
        $localDate[6]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[6]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("Asia/Kolkata");
        $localDate[7]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[7]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("Europe/Rome");
        $localDate[8]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[8]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("Europe/London");
        $localDate[9]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[9]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("Asia/Shanghai");
        $localDate[10]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[10]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("Asia/Tokyo");
        $localDate[11]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[11]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("Australia/Canberra");
        $localDate[12]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[12]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("America/Sao_Paulo");
        $localDate[13]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[13]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("Europe/Istanbul");
        $localDate[14]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[14]["end"] = date("Y-m-d 23:59:59", $now_int);

        date_default_timezone_set("Asia/Riyadh");
        $localDate[15]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[15]["end"] = date("Y-m-d 23:59:59", $now_int);

        //荷兰
        date_default_timezone_set("Europe/Amsterdam");
        $localDate[16]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[16]["end"] = date("Y-m-d 23:59:59", $now_int);
        //沙特阿拉伯
        date_default_timezone_set("Asia/Riyadh");
        $localDate[17]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[17]["end"] = date("Y-m-d 23:59:59", $now_int);
        //新加坡
        date_default_timezone_set("Asia/Singapore");
        $localDate[18]["start"] = date("Y-m-d 00:00:00", $now_int);
        $localDate[18]["end"] = date("Y-m-d 23:59:59", $now_int);

        if ($type == 0) { // 全部
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", 0);
                $localDate[$key]["end"]   = date("Y-m-d 23:59:59", time() + 24*3600);
            }
        }
        if ($type == 1) { // 一年
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", strtotime("-1 year", strtotime($localDate[$key]["start"])));
                $localDate[$key]["end"]   = date("Y-m-d 23:59:59", strtotime($localDate[$key]["end"]));
            }
        }
        if ($type == 2) { // 今天
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", strtotime($localDate[$key]["start"]));
                $localDate[$key]["end"] = date("Y-m-d 23:59:59", strtotime($localDate[$key]["end"]));
            }
        }
        if ($type == 3) { // 昨天
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", strtotime("-1 day", strtotime($localDate[$key]["start"])));
                $localDate[$key]["end"] = date("Y-m-d 23:59:59", strtotime("-1 day", strtotime($localDate[$key]["end"])));
            }
        }
        if ($type == 4) { // 7天
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", strtotime("-7 day", strtotime($localDate[$key]["start"])));
                $localDate[$key]["end"] = date("Y-m-d 23:59:59", strtotime("-1 day", strtotime($localDate[$key]["end"])));
            }
        }
        if ($type == 5) { // 近15天
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", strtotime("-15 day", strtotime($localDate[$key]["start"])));
                $localDate[$key]["end"] = date("Y-m-d 23:59:59", strtotime("-1 day", strtotime($localDate[$key]["end"])));
            }
        }
        if ($type == 6) { // 近30天
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", strtotime("-30 day", strtotime($localDate[$key]["start"])));
                $localDate[$key]["end"] = date("Y-m-d 23:59:59", strtotime("-1 day", strtotime($localDate[$key]["end"])));
            }
        }
        if ($type == 7) { // 近60天
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", strtotime("-60 day", strtotime($localDate[$key]["start"])));
                $localDate[$key]["end"] = date("Y-m-d 23:59:59", strtotime("-1 day", strtotime($localDate[$key]["end"])));
            }
        }
        if ($type == 8) { // 近90天
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", strtotime("-90 day", strtotime($localDate[$key]["start"])));
                $localDate[$key]["end"] = date("Y-m-d 23:59:59", strtotime("-1 day", strtotime($localDate[$key]["end"])));
            }
        }
        if ($type == 9) { // 本月
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", strtotime(date("Y-m-01", strtotime($localDate[$key]["start"]))));
                $localDate[$key]["end"] = date("Y-m-d 23:59:59", strtotime($localDate[$key]["end"]));
            }
        }
        if ($type == 10) { // 上个月
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", strtotime("-1 month", strtotime(date("Y-m", time()))));
                $localDate[$key]["end"]   =  date("Y-m-d 23:59:59", strtotime(-date('d').'day'));
            }
        }
        if ($type == 11) { // 今年
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00",strtotime(date('Y-01-01')));
                $localDate[$key]["end"] = date("Y-m-d 23:59:59", strtotime($localDate[$key]["end"]));
            }
        }
        if ($type == 12) { // 去年
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00",strtotime(date("Y-01-01", strtotime(date('Y-01-01')) - 1)));
                $localDate[$key]["end"]   = date("Y-m-d 00:00:00",strtotime(date('Y-01-01')) - 1);
            }
        }
        if($type == 13){ //上周
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                if (date('w') == '1') {
                    //今天是周一
                    $localDate[$key]["start"]  = date('Y-m-d 00:00:00', time()-7*24*3600); //上周一
                    $localDate[$key]["end"] = date('Y-m-d 23:59:59', (strtotime("-1 week Sunday") +86399)) ;//上周天
                } else {
                    $localDate[$key]["start"] = date('Y-m-d 00:00:00', strtotime("-2 week Sunday")+24*3600); //上周一
                    $localDate[$key]["end"] = date('Y-m-d 23:59:59', (strtotime("-2 week Sunday") + 7*86400+86399)) ;//上周日
                }
            }
        }
        if ($type == 14) { // 近14天
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", strtotime("-14 day", strtotime($localDate[$key]["start"])));
                $localDate[$key]["end"] = date("Y-m-d 23:59:59", strtotime("-1 day", strtotime($localDate[$key]["end"])));
            }
        }

        if ($type == 20) { // 本季度
            foreach ($localDate as $key => $value) {
                $season = ceil((date('n' , strtotime($localDate[$key]["start"])))/3);//当月是第几季度
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", mktime(0, 0, 0,$season*3-3+1,1,date('Y' , strtotime($localDate[$key]["start"]))));
                $localDate[$key]["end"] = date("Y-m-d 23:59:59", (mktime(0, 0, 0,$season*3+1,1,date('Y' , strtotime($localDate[$key]["start"]))) - 1) );
            }
        }
        if ($type == 21) { // 上季度
            foreach ($localDate as $key => $value) {
                $season = ceil((date('n' , strtotime($localDate[$key]["start"])))/3)-1;
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00",mktime(0, 0, 0,$season*3-3+1,1,date('Y' ,strtotime($localDate[$key]["start"]))));
                $localDate[$key]["end"] = date("Y-m-d 23:59:59", (mktime(0, 0, 0,$season*3+1,1,date('Y' , strtotime($localDate[$key]["start"]))) - 1) );
            }
        }
        if($type == 22){  //近3个月
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", strtotime("-2 month", strtotime(date("Y-m", strtotime($localDate[$key]["start"])))));
                $localDate[$key]["end"]   = date("Y-m-d 23:59:59", strtotime($localDate[$key]["end"]));
            }
        }

        if ($type == 77) {  // 上周同日
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                $localDate[$key]["start"] = date("Y-m-d 00:00:00", strtotime("-7 day", strtotime($localDate[$key]["start"])));
                $localDate[$key]["end"] = date("Y-m-d 23:59:59", strtotime("-7 day", strtotime($localDate[$key]["end"])));
            }
        }
        if($type == 88){ //本周
            foreach ($localDate as $key => $value) {
                $localDate[$key]["site_id"] = $key;
                if (date('w') == '1') {
                    //今天是周一
                    $localDate[$key]["start"] = date("Y-m-d 00:00:00", time());
                    $localDate[$key]["end"] = date("Y-m-d 23:59:59", time());
                } else {
                    //获取上周天日期
                    $localDate[$key]["start"] = date("Y-m-d 00:00:00",strtotime("-1 week Sunday") + 24*3600);
                    $localDate[$key]["end"] = date("Y-m-d 23:59:59",strtotime(date("Y-m-d",strtotime("today")))+86399);
                }
            }
        }

        date_default_timezone_set("Asia/Shanghai");
        foreach ($localDate as $key => $value) {
            $localDate[$key]["start"] = strtotime($localDate[$key]["start"]);
            $localDate[$key]["end"] = strtotime($localDate[$key]["end"]);
        }
        return $localDate;
    }

    private function formatTargetData($lists = array() , $datas = array())
    {
        $amzon_site = $this->amzon_site;
        $currency_list = $this->currency_list;
        $amzon_site_country = $this->amzon_site_country;

        $other_name_data = $this->getOtherNameData($datas,$lists);
        $channelData = $other_name_data['channelData'];
        $iskuData = $other_name_data['iskuData'];
        $deparmentData = $other_name_data['deparmentData'];
        $adminData = $other_name_data['adminData'];
        $headDatas = $other_name_data['headDatas'];
        $developerDatas = $other_name_data['developerDatas'];

        foreach($lists as $k1=> $list){
            if($datas['count_dimension'] == 'admin_id'){
                $lists[$k1]['admin_id'] = empty($adminData[$list['admin_id']]) ? '—' : $adminData[$list['admin_id']] ;
            }
            if (isset($list['image'])){
                $lists[$k1]['image'] = $this->check_str("_SL75_",$list['image']);

            }
            if($datas['count_dimension'] == 'operators' || $datas['count_dimension'] == 'sku'){
                $lists[$k1]['operators'] = empty($adminData[$list['goods_operation_user_admin_id']]) ? '—' : $adminData[$list['goods_operation_user_admin_id']] ;
            }
            if($datas['count_dimension'] == 'channel_id'){
                $lists[$k1]['operators'] = empty($adminData[$list['operation_user_admin_id']]) ? '—' : $adminData[$list['operation_user_admin_id']] ;
            }
            if($datas['count_dimension'] == 'department'){
                $dapatment_info = $deparmentData[$list['user_department_id']] ;
                if($dapatment_info['level'] == 1){
                    $lists[$k1]['department1'] = empty($dapatment_info['department_name']) ? '—' : $dapatment_info['department_name'];
                    $lists[$k1]['department2'] = '—' ;
                    $lists[$k1]['department3'] = '—' ;
                }else if($dapatment_info['level'] == 2){
                    $lists[$k1]['department2'] =  empty($dapatment_info['department_name']) ? '—' : $dapatment_info['department_name'];
                    $parent_id = intval($dapatment_info['parent_id']) ;
                    $dapatment_info1 = $deparmentData[$parent_id] ;
                    $lists[$k1]['department1'] = empty($dapatment_info1['department_name']) ? '—' : $dapatment_info1['department_name'];
                    $lists[$k1]['department3'] = '—' ;
                }else if($dapatment_info['level'] == 3){
                    $lists[$k1]['department3'] =  empty($dapatment_info['department_name']) ? '—' : $dapatment_info['department_name'];
                    $parent_id2 = intval($dapatment_info['parent_id']) ;
                    $dapatment_info2 = $deparmentData[$parent_id2] ;
                    $lists[$k1]['department2'] = empty($dapatment_info2['department_name']) ? '—' : $dapatment_info2['department_name'];
                    $parent_id1 = intval($dapatment_info2['parent_id']) ;
                    $dapatment_info1 = $deparmentData[$parent_id1] ;
                    $lists[$k1]['department1'] = empty($dapatment_info1['department_name']) ? '—' : $dapatment_info1['department_name'];
                }else{
                    $lists[$k1]['department1'] = "—";
                    $lists[$k1]['department2'] = '—' ;
                    $lists[$k1]['department3'] = '—' ;
                }
            }
            if(!empty($list['class1'])){
                $lists[$k1]['class1'] = htmlspecialchars_decode($list['class1']) ;
            }


            if(!empty($list['head_id'])){
                $lists[$k1]['head_name'] = $headDatas[$list['head_id']]?$headDatas[$list['head_id']]:'-' ;
            }
            if(!empty($list['developer_id'])){
                $lists[$k1]['developer_name'] = $developerDatas[$list['developer_id']]?$developerDatas[$list['developer_id']]:'-' ;
            }
            if($datas['currency_code'] == 'ORIGIN'){
                $currency_symbol = $amzon_site[intval($list['site_id'])]['currency_symbol'] ;
            }else{
                $currency_symbol = $currency_list[$datas['currency_code']]['symbol'] ;
            }

            $this->handleListData($lists,$k1,$list,$currency_symbol,$datas,$other_name_data['goods_ext_data'],$other_name_data['isku_relate_data']);

            if($_REQUEST['m'] == 'cron'){
                $lists[$k1]['currency_symbol'] = $currency_symbol ;
            }
            if(isset($list['site_id'])){
                if($datas['count_dimension'] != 'site_id'){
                    if (!isset($amzon_site[$list['site_id']])){
                        $list['site_id'] = $other_name_data['channelSiteId'][$list['channel_id']]? $other_name_data['channelSiteId'][$list['channel_id']] : 1;
                    }
                }

                $lists[$k1]['site_id'] = $amzon_site[$list['site_id']]['name'] ;
                $site_group_id = $amzon_site[$list['site_id']]['site_group_id'] ;
                $lists[$k1]['site_group'] = $amzon_site_country[$site_group_id]['site_name'] ;
            }
            if(isset($list['site_country_id']) && !isset($amzon_site[$list['site_country_id']])){//不存在的站点以美国地区显示
                $lists[$k1]['site_country_id'] = $other_name_data['channelSiteId'][$list['channel_id']]? $other_name_data['channelSiteId'][$list['channel_id']] : 1;
            }
            if(isset($list['channel_id'])){
                $lists[$k1]['channel_id'] = $channelData[$list['channel_id']] ;
            }
            //发货方式
            if(!empty($list['min_transport_mode']) && !empty($list['min_transport_mode'])){
                if($list['min_transport_mode'] == $list['max_transport_mode']){
                    $lists[$k1]['transport_mode'] = ($list['min_transport_mode'] == 1) ? 'FBM' : 'FBA' ;
                }else{
                    $lists[$k1]['transport_mode'] = 'FBA/FBM' ;
                }
            }
            if($datas['count_dimension'] == 'isku'){
                $lists[$k1]['isku'] = empty($iskuData[$list['isku_id']]['isku']) ? '—' : $iskuData[$list['isku_id']]['isku'] ;
                $lists[$k1]['image'] = empty($iskuData[$list['isku_id']]['image']) ? '—' : $iskuData[$list['isku_id']]['image'] ;
                $lists[$k1]['isku_title'] = empty($iskuData[$list['isku_id']]['isku_title']) ? '—' : $iskuData[$list['isku_id']]['isku_title'] ;
                $lists[$k1]['head_name'] = empty($iskuData[$list['isku_id']]['head_name']) ? '—' : $iskuData[$list['isku_id']]['head_name'] ;
                $lists[$k1]['developer_name'] = empty($iskuData[$list['isku_id']]['developer_name']) ? '—' : $iskuData[$list['isku_id']]['developer_name'] ;
            }

            if(isset($list['time'])){
                if($datas['count_periods'] == '4'){
                    $times = explode('-',$list['time']) ;
                    $lists[$k1]['time'] = $times[0].'Q'.$times[1] ;
                }else if($datas['count_periods'] == '2'){
                    $times = explode('-',$list['time']) ;
                    $week = $this->getWeekTime($times[0] ,$times[1]);
                    $lists[$k1]['time'] = $times[0].'-W'.$times[1].'(' .$week['week_start'].'至'.$week['week_end'].')' ;
                }
            }

            if ($list['class1'] === null or $list['class1'] === ''){
                $lists[$k1]['class1'] = '—';
            }

            if ($list['group'] === null or $list['group'] === ''){
                $lists[$k1]['group'] = '—';
            }
            foreach($list as $k2=> $da){
                if($k2 == 'goods_visitors') { //买家访问次数
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else{
                        $lists[$k1][$k2] = intval($da) ;
                    }
                }else if($k2 == 'goods_conversion_rate'){ //订单商品数量转化率
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da * 100, 2) . '%';
                    }
                }else if($k2 == 'goods_rank'){ //大类目rank
                    if(is_null($da) || $datas['is_count'] == 1){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] =  round($da, 2);
                    }
                }else if($k2 == 'goods_min_rank'){ //小类目rank
                    if(is_null($da) || $datas['is_count'] == 1){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da, 2);
                    }
                }else if($k2 == 'goods_views_number'){ //页面浏览次数
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = intval($da);
                    }
                }else if($k2 == 'goods_views_rate'){ //页面浏览次数百分比
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da * 100, 2) . '%';
                    }
                }else if($k2 == 'goods_buyer_visit_rate'){ //买家访问次数百分比
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da * 100, 2) . '%';
                    }
                }else if($k2 == 'goods_buybox_rate'){ //购买按钮赢得率
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da * 100, 2) . '%';
                    }
                }else if($k2 == 'sale_sales_volume'){ //销售量
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = intval($da);
                    }
                }else if($k2 == 'sale_many_channel_sales_volume'){ //多渠道数量
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = intval($da);
                    }
                }else if($k2 == 'sale_sales_quota'){ //商品销售额
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else{
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }

                    }
                }else if($k2 == 'sale_return_goods_number'){ //退款量
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = intval($da);
                    }
                }else if($k2 == 'sale_refund'){ //退款
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = 0 - round(abs($da), 2) ;
                        }else{
                            if (round($da, 2) != 0) {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            } else {
                                $lists[$k1][$k2] = $currency_symbol . '0';
                            }
                        }

                    }
                }else if($k2 == 'sale_refund_rate'){ //退款率
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round(abs($da) * 100, 2) . '%';
                    }
                }else if($k2 == 'promote_discount'){ //promote折扣
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'promote_refund_discount'){ //退款返还promote折扣
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'cost_profit_total_income'){ //总收入
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'cost_profit_total_pay'){ //总支出
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'cost_profit_profit'){ //毛利润
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'cost_profit_profit_rate'){ //毛利率
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da * 100, 2) . '%';
                    }
                }else if($k2 == 'amazon_fee'){ //亚马逊费用
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'amazon_sales_commission'){ //亚马逊销售佣金
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'amazon_fba_delivery_fee'){ //FBA代发货费用
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'amazon_multi_channel_delivery_fee'){ //多渠道配送费
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'amazon_settlement_fee'){ //结算费
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'amazon_other_fee'){ //其他亚马逊费用
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'amazon_return_shipping_fee'){ //返还运费
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'amazon_return_sale_commission'){ //返还亚马逊销售佣金
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else{
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'amazon_refund_deducted_commission'){ //退款扣除佣金
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'amazon_fba_return_processing_fee'){ //FBA退货处理费
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'amazon_fba_monthly_storage_fee'){ //FBA月仓储费
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'amazon_fee_rate'){ //亚马逊费用占比
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if (round($da, 2) >= 0) {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        } else {
                            $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                        }
                    }
                }else if($k2 == 'purchase_logistics_purchase_cost'){ //采购成本
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'purchase_logistics_logistics_cost'){ //物流/头程
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'purchase_logistics_cost_rate'){ //成本/物流费用占比
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if (round($da, 2) >= 0) {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        } else {
                            $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                        }
                    }
                }else if($k2 == 'operate_fee'){ //运营费用
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'operate_fee_rate'){ //运营费用占比
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if (round($da, 2) >= 0) {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        } else {
                            $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                        }
                    }
                }else if($k2 == 'evaluation_fee'){ //测评费用
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'evaluation_fee_rate'){ //测评费用占比
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if (round($da, 2) >= 0) {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        } else {
                            $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                        }
                    }
                }else if($k2 == 'cpc_cost'){ //CPC花费
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'cpc_ad_fee'){ //CPC广告费用
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'cpc_cost_rate'){ //CPC花费占比
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if (round($da, 2) >= 0) {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        } else {
                            $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                        }
                    }
                }else if($k2 == 'cpc_exposure'){ //CPC曝光量
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da, 2);
                    }
                }else if($k2 == 'cpc_click_number'){ //CPC点击次数
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da, 2);
                    }
                }else if($k2 == 'cpc_click_rate'){ //CPC点击率
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da * 100, 2) . '%';
                    }
                }else if($k2 == 'cpc_order_number'){ //CPC订单数
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da, 2);
                    }
                }else if($k2 == 'cpc_order_rate'){ //cpc订单占比
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da * 100, 2) . '%';
                    }
                }else if($k2 == 'cpc_click_conversion_rate'){ //cpc点击转化率
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da * 100, 2) . '%';
                    }
                }else if($k2 == 'cpc_turnover'){ //CPC成交额
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'cpc_turnover_rate'){ //CPC成交额占比
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if (round($da, 2) >= 0) {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        } else {
                            $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                        }
                    }
                }else if($k2 == 'cpc_avg_click_cost'){ //CPC平均点击花费
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'cpc_acos'){ //ACOS
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if (round($da, 2) >= 0) {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        } else {
                            $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                        }
                    }
                }else if($k2 == 'cpc_direct_sales_volume'){ //CPC直接销量
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da, 2);
                    }
                }else if($k2 == 'cpc_direct_sales_quota'){ //CPC直接销售额
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'cpc_direct_sales_volume_rate'){ //CPC直接销量占比
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if (round($da, 2) >= 0) {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        } else {
                            $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                        }
                    }
                }else if($k2 == 'cpc_indirect_sales_volume'){ //CPC间接销量
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da, 2);
                    }
                }else if($k2 == 'cpc_indirect_sales_quota'){ //CPC间接销售额
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'cpc_indirect_sales_volume_rate'){ //CPC间接销量占比
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if (round($da, 2) >= 0) {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        } else {
                            $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                        }
                    }
                }else if($k2 == 'fba_sales_stock'){ //可售库存
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = (empty($da) || $da < 0) ? 0 : round($da, 2);
                    }
                }else if($k2 == 'fba_sales_day'){ //可售天数
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if( intval($lists[$k1]['min_fba_sales_day']) == -111111 && intval($lists[$k1]['max_fba_sales_day']) == -111111){
                            $lists[$k1][$k2] = '计算错误' ;
                        }else{
                            if(intval($lists[$k1]['min_egt0_fba_sales_day'])  == intval($lists[$k1]['max_egt0_fba_sales_day']) ){
                                $lists[$k1][$k2] = intval($lists[$k1]['min_egt0_fba_sales_day']) ;
                            }else{
                                $lists[$k1][$k2] = intval($lists[$k1]['min_egt0_fba_sales_day']).'~'.intval($lists[$k1]['max_egt0_fba_sales_day']) ;
                            }
                        }
                    }
                }else if($k2 == 'fba_reserve_stock'){ //预留库存
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = (empty($da) || $da < 0) ? 0 : round($da, 2);
                    }
                }else if($k2 == 'fba_recommended_replenishment'){ //建议补货量
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if( intval($lists[$k1]['max_fba_recommended_replenishment']) == -111111 && intval($lists[$k1]['max_fba_recommended_replenishment']) == -111111){
                            $lists[$k1][$k2] = '计算错误' ;
                        }else{
                            $lists[$k1][$k2] = ($lists[$k1]['fba_recommended_replenishment']);
                        }
                    }
                }else if($k2 == 'fba_special_purpose'){ //FBA专用
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if( intval($lists[$k1]['max_fba_special_purpose']) == -111111 && intval($lists[$k1]['max_fba_special_purpose']) == -111111){
                            $lists[$k1][$k2] = '计算错误' ;
                        }else{
                            $lists[$k1][$k2] = intval($lists[$k1]['fba_special_purpose']);
                        }
                    }
                }

                else if($k2 == 'sale_order_number'){ //订单数
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da, 2);
                    }
                }else if($k2 == 'promote_store_fee'){ //店铺促销费用
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'other_vat_fee'){ // VAT
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'other_remark_fee'){ //备注费用
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'other_other_fee'){ //其他费用
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'other_goods_adjust'){ //产品调整
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'cpc_ad_settlement'){ //广告结款
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'fba_goods_value'){ //在库总成本
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'fba_stock'){ //FBA库存
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da, 2);
                    }
                }else if($k2 == 'fba_sales_volume'){ //FBA销量
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da, 2);
                    }
                }else if($k2 == 'fba_need_replenish'){ //需补货SKu
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da, 2);
                    }
                }else if($k2 == 'fba_predundancy_number'){ //冗余FBA数
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        $lists[$k1][$k2] = round($da, 2);
                    }
                }

                else if($k2 == 'promote_coupon'){ //coupon优惠券
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'promote_run_lightning_deal_fee'){ //RunLightningDealFee
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'amazon_order_fee'){ //订单费用
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else if($k2 == 'amazon_refund_fee'){ //退货退款费用
                    if(is_null($da)){
                        $lists[$k1][$k2] = '—' ;
                    }else {
                        if($_REQUEST['m'] == 'cron'){
                            $lists[$k1][$k2] = round($da, 2);
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                            } else {
                                $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                            }
                        }
                    }
                }else{
                    switch ($k2){
                        case "amazon_stock_fee"://库存费用
                        case "amazon_long_term_storage_fee"://FBA长期仓储费
                        case "goods_adjust_fee"://商品调整费用
                        case "other_review_enrollment_fee"://早期评论者计划
                        case "sale_sales_dollars"://订单金额
                        case "fba_sales_quota"://fba商品销售额
                        case "fbm_sales_quota"://fbm商品销售额
                        case "fba_logistics_head_course"://FBA头程物流
                        case "fbm_logistics_head_course"://fbm物流
                        case "shipping_charge"://运费
                        case "tax"://TAX（销售）
                        case "ware_house_lost"://FBA仓丢失赔款
                        case "ware_house_damage": //FBA仓损坏赔款
                        case "channel_fbm_safe_t_claim_demage"://SAF-T
                            $lists[$k1][$k2] = $this->formatData($da,$currency_symbol);
                            break;
                    }
                }

            }
        }
        return $lists ;
    }

    private function getOtherNameData($datas,$lists = array())
    {
        //店铺数据
        $channel_list = $this->getChannelListByParams2(array('user_id'=>$datas['user_id'] , 'is_master'=>1,'is_get_all_channel'=>1)) ;
        $channel_arr = $channel_list['channel_arr'] ;
        $channelData = array();
        $channelSiteId = array();
        if(!empty($channel_arr)){
            foreach($channel_arr as $channel){
                $channelData[$channel['id']] = $channel['title'] ;
                $channelSiteId[$channel['id']] = $channel['site_id'] ;
            }
        }
        //isku数据
        $iskuData = array() ;
        if($datas['count_dimension'] == 'isku'){
            $isku_page = 1 ;
            do{
                $isku_limit = (($isku_page - 1) * 5000) . ',5000' ;
                $sql = <<<SQL
SELECT i.id , i.isku , i.isku_title ,i.image , hu.name as head_name ,du.name as developer_name
  FROM erp_captain_{$this->dbhost}.e_amazon_goods_isku_{$this->codeno} as i
  LEFT JOIN erp_captain_{$this->dbhost}.e_amazon_goods_isku_user_{$this->codeno} as hu
    ON hu.id = i.head_id AND hu.type = 1 AND hu.status = 1
  LEFT JOIN erp_captain_{$this->dbhost}.e_amazon_goods_isku_user_{$this->codeno} as du
    ON du.id = i.developer_id AND du.type = 2 AND du.status = 1
 WHERE i.user_id=? and i.status in (1,2)
 LIMIT {$isku_limit}
SQL;
                $isku_list = DB::query($sql, [$datas['user_id']]);
                if(!empty($isku_list)){
                    foreach($isku_list as $isku){
                        $iskuData[$isku['id']] = $isku ;
                    }
                }
                $isku_page++ ;
            }while(count($isku_list) >= 5000) ;
        }

        //部门数据
        $deparmentData = array();
        if($datas['count_dimension'] == 'department'){
            $deparmentData = $this->getDevelopmentData($datas['user_id']) ;
        }

        //子账号数据
        $adminData = array() ;
        if($datas['count_dimension'] == 'admin_id' || $datas['count_dimension'] == 'operators' || $datas['count_dimension'] == 'channel_id' || $datas['count_dimension'] == 'sku'){ //运营人员 或子账号
            $sql = 'select id,username,realname from erp_base.b_user_admin where user_id=?';
            $admin_list = DB::query($sql, [$datas['user_id']]);
            if(!empty($admin_list)){
                foreach($admin_list as $admin){
                    $adminData[$admin['id']] = empty($admin['realname']) ?   $admin['username'] : $admin['realname'];
                }
            }
        }
        //负责人
        $headDatas = array() ;
        $sql = "select id,name,type,link_admin_id from erp_captain_{$this->dbhost}.e_amazon_goods_isku_user_{$this->codeno} where user_id=? and type=? and status=1 order by id desc";
        if($datas['count_dimension'] == 'head_id' || $datas['count_dimension'] == 'isku'){ //负责人
            $head_list = DB::query($sql, [$datas['user_id'], 1]);
            if(!empty($head_list)){
                foreach($head_list as $head){
                    $headDatas[$head['id']] = $head['name'];
                }
            }
        }
        //开发人员
        $developerDatas = array() ;
        if($datas['count_dimension'] == 'developer_id' || $datas['count_dimension'] == 'isku'){ //开发人员
            $developer_list = DB::query($sql, [$datas['user_id'], 2]);
            if(!empty($developer_list)){
                foreach($developer_list as $developer){
                    $developerDatas[$developer['id']] = $developer['name'];
                }
            }
        }

        //ext表数据，目前有长宽高重量标签goods_ext_model
        $goods_ext_data = array();
        $isku_relate_data = array();
        if ($datas['count_dimension'] == 'sku' && $datas['is_distinct_channel'] == 1){
            if (!empty($lists)){
                $goods_id_arr = array_column($lists,'goods_g_amazon_goods_id');
                $goods_id_arr = $this->stringIdsFilterToArray(implode(",",$goods_id_arr));
                if (!empty($goods_id_arr)){
                    $in_goods_ids = implode(',', $goods_id_arr);
                    $sql = <<<SQL
select tags_id,longest_side,median_side,shortest_side,amazon_goods_id,unit_of_dimension,item_package_weight,unit_of_weight
  from erp_goods_{$this->dbhost}.amazon_goods_ext_{$this->codeno}
 where user_id=? AND amazon_goods_id IN ({$in_goods_ids})
SQL;
                    $goods_ext_data = DB::query($sql, [$datas['user_id']]);
                    if (!empty($goods_ext_data)){
                        $goods_ext_data = array_column($goods_ext_data,null,'amazon_goods_id');
                        $sql = "select id,tag_name from erp_goods_{$this->dbhost}.amazon_goods_tags_{$this->codeno} where user_id=? and status=1";
                        $tags = DB::query($sql, [$datas['user_id']]);
                        if (!empty($tags)){
                            $tags = array_column($tags,null,'id');
                            foreach ($goods_ext_data as $key => $v){
                                $tag_name = array();
                                if (!empty($v['tags_id'])){
                                    foreach (json_decode($v['tags_id'],true) as $tag_v){
                                        if (isset($tags[$tag_v])){
                                            $tag_name[] = $tags[$tag_v]['tag_name'];
                                        }
                                    }
                                }
                                if (!empty($tag_name)){
                                    $goods_ext_data[$key]['goods_tags'] = implode(",",$tag_name);
                                }else{
                                    $goods_ext_data[$key]['goods_tags'] = '-';
                                }
                            }
                        }

                    }
                }

            }
        }

        if (($datas['count_dimension'] == 'sku' && $datas['is_distinct_channel'] == 1) or $datas['count_dimension'] == 'isku'){
            if (!empty($lists)){
                $isku_id_arr  = array_column($lists,'isku_id');
                $isku_id_arr  = $this->stringIdsFilterToArray(implode(",",$isku_id_arr));
                if (!empty($isku_id_arr)){
                    $isku_relate_data = $this->getIskuRelateData($datas['user_id'], "i.user_id={$datas['user_id']} AND i.id IN (" . implode(",", $isku_id_arr) .')');
                }
            }
        }

        return array(
            "channelData"       => $channelData,
            "iskuData"          => $iskuData,
            "deparmentData"     => $deparmentData,
            "adminData"         => $adminData,
            "headDatas"         => $headDatas,
            "developerDatas"    => $developerDatas,
            "channelSiteId"     => $channelSiteId,
            "goods_ext_data"    => $goods_ext_data,
            "isku_relate_data"  => $isku_relate_data,
        );
    }

    /**
     * 获取isku的品名，ispu信息，分类信息等
     * @author  json
     *
     * @param $user_id
     * @param $where
     * @return array
     */
    protected function getIskuRelateData($user_id,$where)
    {
        $sql = <<<SQL
select i.id,i.isku,i.isku_title,i.brand_id,i.class_id1,i.class_id2,i.class_id3,i.net_length,i.net_width,i.net_height,i.net_weight,b.brand_name,p.ispu_title,p.ispu
  from erp_captain_{$this->dbhost}.e_amazon_goods_isku_{$this->codeno} AS i
  LEFT JOIN erp_captain_{$this->dbhost}.e_amazon_goods_isku_brand_{$this->codeno} as b ON b.id = i.brand_id
  LEFT JOIN erp_captain_{$this->dbhost}.e_amazon_goods_ispu_{$this->codeno} as p ON p.id = i.ispu_id
 where {$where}
SQL;
        $isku_data = DB::query($sql);
        if (!empty($isku_data)){
            $class_id1 = array_column($isku_data,'class_id1');
            $class_id2 = array_column($isku_data,'class_id2');
            $class_id3 = array_column($isku_data,'class_id3');
            $class_id_arr = $this->stringIdsFilterToArray(implode(",",$class_id1).",".implode(",",$class_id2).",".implode(",",$class_id3));
            if (!empty($class_id_arr)){
                $sql = <<<SQL
select id,class_name
  from erp_captain_{$this->dbhost}.e_amazon_goods_isku_class_{$this->codeno}
 where user_id=? and id in ({$class_id_str})
SQL;
                $class_arr = DB::query($sql, [$user_id]);
                if (!empty($class_arr)){
                    $class_arr = array_column($class_arr,null,'id');
                }
            }
            foreach ($isku_data as $key => $v){
                $isku_data[$key]['class_name1'] = isset($class_arr[$v['class_id1']])?$class_arr[$v['class_id1']]['class_name']:"";
                $isku_data[$key]['class_name2'] = isset($class_arr[$v['class_id2']])?$class_arr[$v['class_id2']]['class_name']:"";
                $isku_data[$key]['class_name3'] = isset($class_arr[$v['class_id3']])?$class_arr[$v['class_id3']]['class_name']:"";
            }
            $isku_data = array_column($isku_data,null,'id');
        }

        return $isku_data;
    }

    /**
     * function csvDataCheck
     * ids 的过滤及转为数据
     * @author json
     *
     * @param string $ids id1,id2,id3
     * @return array
     */
    protected function stringIdsFilterToArray($ids){
        $table_arr = array();
        if (empty($ids)){
            return $table_arr;
        }
        foreach (explode(",",$ids) as $value){
            $id_tmp = (int)$value;
            if ($id_tmp > 0){
                $table_arr[] = $id_tmp;
            }
        }

        return $table_arr;

    }

    /**
     * 订单明细图片转换
     * @author json.qiu 2019/10/15
     *
     * @param $str_in
     * @param $strfinance_report_es
     * @return mixed
     */
    protected function check_str($str_in, $str)
    {
        $con = explode($str_in, $str);
        if (count($con) > 1) {
            $iamge_url = str_replace($str_in, "._SL200_.", $str);
            return $iamge_url;
        } else {
            $str_in    = "._SL500_.";
            $iamge_url = str_replace($str_in, "._SL200_.", $str);
            return $iamge_url;
        }
    }

    private function handleListData(&$lists,$k1,$list,$currency_symbol,$datas,$goods_ext_data  = array(), $isku_relate_data = array())
    {
        if(isset($list['goods_product_category_name_1'])){
            $lists[$k1]['goods_product_category_name_1'] = htmlspecialchars_decode($list['goods_product_category_name_1']) ;
        }
        if(isset($list['goods_product_category_name_2'])){
            $lists[$k1]['goods_product_category_name_2'] = htmlspecialchars_decode($list['goods_product_category_name_2']) ;
        }
        if(isset($list['goods_product_category_name_3'])){
            $lists[$k1]['goods_product_category_name_3'] = htmlspecialchars_decode($list['goods_product_category_name_3']) ;
        }
        if(isset($list['goods_is_care'])){
            $lists[$k1]['goods_is_care'] = $list['goods_is_care']==1?"是":"否" ;
        }
        if(isset($list['goods_is_new'])){
            $lists[$k1]['goods_is_new'] = $list['goods_is_new']==1?"是":"否" ;
        }
        if(isset($list['goods_price_min'])){
            $lists[$k1]['goods_price'] = ($list['goods_price_min'] == $list['goods_price_max']) ? ($currency_symbol.round($list['goods_price_min'],2)):($currency_symbol.round($list['goods_price_min'],2)."~".$currency_symbol.round($list['goods_price_max'],2))  ;
        }

        if ($datas['count_dimension'] == 'sku' && $datas['is_distinct_channel'] == 1){
            $lists[$k1]['goods_length_width_height'] = (isset($goods_ext_data[$list['goods_g_amazon_goods_id']]) && ($goods_ext_data[$list['goods_g_amazon_goods_id']]['longest_side'] >0 || $goods_ext_data[$list['goods_g_amazon_goods_id']]['median_side'] >0 || $goods_ext_data[$list['goods_g_amazon_goods_id']]['shortest_side'] >0))?($goods_ext_data[$list['goods_g_amazon_goods_id']]['longest_side']."*".$goods_ext_data[$list['goods_g_amazon_goods_id']]['median_side']."*".$goods_ext_data[$list['goods_g_amazon_goods_id']]['shortest_side']." ".$goods_ext_data[$list['goods_g_amazon_goods_id']]['unit_of_dimension']):"-";
            $lists[$k1]['goods_weight'] = (isset($goods_ext_data[$list['goods_g_amazon_goods_id']]) && !empty($goods_ext_data[$list['goods_g_amazon_goods_id']]['item_package_weight']))?($goods_ext_data[$list['goods_g_amazon_goods_id']]['item_package_weight']." ".$goods_ext_data[$list['goods_g_amazon_goods_id']]['unit_of_weight']):"-";

            $lists[$k1]['goods_tags'] = $this->handleArrayData($goods_ext_data,$list['goods_g_amazon_goods_id'],'goods_tags');

            $lists[$k1]['goods_isku'] = $this->handleArrayData($isku_relate_data,$list['isku_id'],'isku');//isku
            $lists[$k1]['goods_ispu_title'] = $this->handleArrayData($isku_relate_data,$list['isku_id'],'ispu_title');//ispu品名
            $lists[$k1]['goods_ispu'] = $this->handleArrayData($isku_relate_data,$list['isku_id'],'ispu');//ispu
            $lists[$k1]['goods_isku_brand_name'] = $this->handleArrayData($isku_relate_data,$list['isku_id'],'brand_name');//isku品牌
            $lists[$k1]['goods_isku_class_name1'] = $this->handleArrayData($isku_relate_data,$list['isku_id'],'class_name1');//isku一级分类
            $lists[$k1]['goods_isku_class_name2'] = $this->handleArrayData($isku_relate_data,$list['isku_id'],'class_name2');//isku二级分类
            $lists[$k1]['goods_isku_class_name3'] = $this->handleArrayData($isku_relate_data,$list['isku_id'],'class_name3');//isku三级分类
        }
        if ($datas['count_dimension'] == 'isku' ){
            $lists[$k1]['goods_length_width_height'] = (isset($isku_relate_data[$list['isku_id']]) && ($isku_relate_data[$list['isku_id']]['net_width'] >0 OR $isku_relate_data[$list['isku_id']]['net_length'] >0 or $isku_relate_data[$list['isku_id']]['net_height'] >0))?(round($isku_relate_data[$list['isku_id']]['net_length'],2)."*".round($isku_relate_data[$list['isku_id']]['net_width'],2)."*".round($isku_relate_data[$list['isku_id']]['net_height'],2)." cm"):"-";
            $lists[$k1]['goods_weight'] = (isset($isku_relate_data[$list['isku_id']]) && $isku_relate_data[$list['isku_id']]['net_weight'] >0 )?(round($isku_relate_data[$list['isku_id']]['net_weight'],2)." g"):"-";
            $lists[$k1]['goods_isku'] = $this->handleArrayData($isku_relate_data,$list['isku_id'],'isku');//isku
            $lists[$k1]['goods_ispu_title'] = $this->handleArrayData($isku_relate_data,$list['isku_id'],'ispu_title');//ispu品名
            $lists[$k1]['goods_ispu'] = $this->handleArrayData($isku_relate_data,$list['isku_id'],'ispu');//ispu
            $lists[$k1]['goods_isku_brand_name'] = (isset($isku_relate_data[$list['isku_id']]) && !empty($isku_relate_data[$list['isku_id']]['brand_name']))? $isku_relate_data[$list['isku_id']]['brand_name']:"-";//isku品牌
            $lists[$k1]['goods_isku_class_name1'] = (isset($isku_relate_data[$list['isku_id']]) && !empty($isku_relate_data[$list['isku_id']]['class_name1']))?$isku_relate_data[$list['isku_id']]['class_name1']:"-";//isku一级分类
            $lists[$k1]['goods_isku_class_name2'] = (isset($isku_relate_data[$list['isku_id']]) && !empty($isku_relate_data[$list['isku_id']]['class_name2']))?$isku_relate_data[$list['isku_id']]['class_name2']:"-";//isku二级分类
            $lists[$k1]['goods_isku_class_name3'] = (isset($isku_relate_data[$list['isku_id']]) && !empty($isku_relate_data[$list['isku_id']]['class_name3']))?$isku_relate_data[$list['isku_id']]['class_name3']:"-";//isku三级分类
        }
    }

    protected function handleArrayData($array,$key_field,$data_field){
        return (isset($array[$key_field]) && !empty($array[$key_field][$data_field]))?$array[$key_field][$data_field]:"-";
    }

    protected function getWeekTime($year,$week,$start = '' ,$end = ''){
        $flag_tmp = date('W', strtotime("{$year}-01-01"))==1?0:1;//判断每年的第一天是不是第一周

        $week -= $flag_tmp;
        $ret = array();
        $dto = new \DateTime();
        $dto->setISODate($year, $week);
        $ret['week_start'] = $dto->format('m-d');
        $start_year = $dto->format('Y');
        $dto->modify('+6 days');
        $ret['week_end'] = $dto->format('m-d');
        $end_year = $dto->format('Y');
        if ($week == 0){//如果第一周为0的情况证明该年的1月
            $ret['week_start'] = "01-01";
        }elseif ($week == 1 && $flag_tmp == 0){
            $ret['week_start'] = "01-01";
        }elseif (($week == 52 or $week == 53) && $start_year != $end_year){
            $ret['week_end'] = "12-31";
        }

        return $ret;


    }

    private function formatTimeData($lists = array() , $datas = array() )
    {
        $amzon_site = $this->amzon_site;
        $currency_list = $this->currency_list;
        $amzon_site_country = $this->amzon_site_country;

        $other_name_data = $this->getOtherNameData($datas,$lists);
        $channelData = $other_name_data['channelData'];
        $iskuData = $other_name_data['iskuData'];
        $deparmentData = $other_name_data['deparmentData'];
        $adminData = $other_name_data['adminData'];
        $headDatas = $other_name_data['headDatas'];
        $developerDatas = $other_name_data['developerDatas'];

        $time_target = $datas['time_target'] ;
        foreach($lists as $k1=> $list){
            if($datas['count_dimension'] == 'admin_id'){
                $lists[$k1]['admin_id'] = empty($adminData[$list['admin_id']]) ? '—' : $adminData[$list['admin_id']] ;
            }
            if (isset($list['image'])){
                $lists[$k1]['image'] = $this->check_str("_SL75_",$list['image']);

            }
            if($datas['count_dimension'] == 'operators' || $datas['count_dimension'] == 'sku'){
                $lists[$k1]['operators'] = empty($adminData[$list['goods_operation_user_admin_id']]) ? '—' : $adminData[$list['goods_operation_user_admin_id']] ;
            }
            if($datas['count_dimension'] == 'channel_id'){
                $lists[$k1]['operators'] = empty($adminData[$list['operation_user_admin_id']]) ? '—' : $adminData[$list['operation_user_admin_id']] ;
            }
            if($datas['count_dimension'] == 'department'){
                $dapatment_info = $deparmentData[$list['user_department_id']] ;
                if($dapatment_info['level'] == 1){
                    $lists[$k1]['department1'] = empty($dapatment_info['department_name']) ? '—' : $dapatment_info['department_name'];
                    $lists[$k1]['department2'] = '—' ;
                    $lists[$k1]['department3'] = '—' ;
                }else if($dapatment_info['level'] == 2){
                    $lists[$k1]['department2'] =  empty($dapatment_info['department_name']) ? '—' : $dapatment_info['department_name'];
                    $parent_id = intval($dapatment_info['parent_id']) ;
                    $dapatment_info1 = $deparmentData[$parent_id] ;
                    $lists[$k1]['department1'] = empty($dapatment_info1['department_name']) ? '—' : $dapatment_info1['department_name'];
                    $lists[$k1]['department3'] = '—' ;
                }else if($dapatment_info['level'] == 3){
                    $lists[$k1]['department3'] =  empty($dapatment_info['department_name']) ? '—' : $dapatment_info['department_name'];
                    $parent_id2 = intval($dapatment_info['parent_id']) ;
                    $dapatment_info2 = $deparmentData[$parent_id2] ;
                    $lists[$k1]['department2'] = empty($dapatment_info2['department_name']) ? '—' : $dapatment_info2['department_name'];
                    $parent_id1 = intval($dapatment_info2['parent_id']) ;
                    $dapatment_info1 = $deparmentData[$parent_id1] ;
                    $lists[$k1]['department1'] = empty($dapatment_info1['department_name']) ? '—' : $dapatment_info1['department_name'];
                }else{
                    $lists[$k1]['department1'] = '—';
                    $lists[$k1]['department2'] = '—' ;
                    $lists[$k1]['department3'] = '—' ;
                }
            }
            if(!empty($list['class1'])){
                $lists[$k1]['class1'] = htmlspecialchars_decode($list['class1']) ;
            }
            if(!empty($list['head_id'])){
                $lists[$k1]['head_name'] = $headDatas[$list['head_id']] ;
            }
            if(!empty($list['developer_id'])){
                $lists[$k1]['developer_name'] = $developerDatas[$list['developer_id']] ;
            }
            if($datas['currency_code'] == 'ORIGIN'){
                $currency_symbol = $amzon_site[intval($list['site_id'])]['currency_symbol'] ;
            }else{
                $currency_symbol = $currency_list[$datas['currency_code']]['symbol'] ;
            }
            $this->handleListData($lists,$k1,$list,$currency_symbol,$datas,$other_name_data['goods_ext_data'],$other_name_data['isku_relate_data']);
            if($_REQUEST['m'] == 'cron'){
                $lists[$k1]['currency_symbol'] = $currency_symbol ;
            }
            if(isset($list['site_id'])){
                if($datas['count_dimension'] != 'site_id'){
                    if (!isset($amzon_site[$list['site_id']])){
                        $list['site_id'] = $other_name_data['channelSiteId'][$list['channel_id']]? $other_name_data['channelSiteId'][$list['channel_id']] : 1;
                    }
                }
                $lists[$k1]['site_id'] = $amzon_site[$list['site_id']]['name'] ;
                $site_group_id = $amzon_site[$list['site_id']]['site_group_id'] ;
                $lists[$k1]['site_group'] = $amzon_site_country[$site_group_id]['site_name'] ;
            }
            if(isset($list['site_country_id']) && !isset($amzon_site[$list['site_country_id']])){//不存在的站点以美国地区显示
                $lists[$k1]['site_country_id'] = $other_name_data['channelSiteId'][$list['channel_id']]? $other_name_data['channelSiteId'][$list['channel_id']] : 1;
            }
            if(isset($list['channel_id'])){
                $lists[$k1]['channel_id'] = $channelData[$list['channel_id']] ;
            }

            //发货方式
            if(!empty($list['min_transport_mode']) && !empty($list['min_transport_mode'])){
                if($list['min_transport_mode'] == $list['max_transport_mode']){
                    $lists[$k1]['transport_mode'] = ($list['min_transport_mode'] == 1) ? 'FBM' : 'FBA' ;
                }else{
                    $lists[$k1]['transport_mode'] = 'FBA/FBM' ;
                }
            }

            if($datas['count_dimension'] == 'isku'){
                $lists[$k1]['isku'] = empty($iskuData[$list['isku_id']]['isku']) ? '—' : $iskuData[$list['isku_id']]['isku'] ;
                $lists[$k1]['image'] = empty($iskuData[$list['isku_id']]['image']) ? '—' : $iskuData[$list['isku_id']]['image'] ;
                $lists[$k1]['isku_title'] = empty($iskuData[$list['isku_id']]['isku_title']) ? '—' : $iskuData[$list['isku_id']]['isku_title'] ;
                $lists[$k1]['head_name'] = empty($iskuData[$list['isku_id']]['head_name']) ? '—' : $iskuData[$list['isku_id']]['head_name'] ;
                $lists[$k1]['developer_name'] = empty($iskuData[$list['isku_id']]['developer_name']) ? '—' : $iskuData[$list['isku_id']]['developer_name'] ;
            }

            if ($list['class1'] === null or $list['class1'] === ''){
                $lists[$k1]['class1'] = '—';
            }

            if ($list['group'] === null or $list['group'] === ''){
                $lists[$k1]['group'] = '—';
            }
            foreach($list as $k2=> $da){
                if(!in_array($k2 , ['id' , 'site_id' , 'channel_id' ,'goods_id' , 'image' ,'title' ,'isku','sku','parent_asin','asin','site_group','class1','group','tags','department','operators','isku_title','head_name','developer_name','admin_id','site_country_id'])){
                    if($time_target == 'goods_visitors') { //买家访问次数
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else{
                            $lists[$k1][$k2] = intval($da) ;
                        }
                    }else if($time_target == 'goods_conversion_rate'){ //订单商品数量转化率
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        }
                    }else if($time_target == 'goods_rank'){ //大类目rank
                        if(is_null($da) || $datas['is_count'] == 1){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] =  round($da, 2);
                        }
                    }else if($time_target == 'goods_min_rank'){ //小类目rank
                        if(is_null($da) || $datas['is_count'] == 1){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da, 2);
                        }
                    }else if($time_target == 'goods_views_number'){ //页面浏览次数
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = intval($da);
                        }
                    }else if($time_target == 'goods_views_rate'){ //页面浏览次数百分比
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        }
                    }else if($time_target == 'goods_buyer_visit_rate'){ //买家访问次数百分比
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        }
                    }else if($time_target == 'goods_buybox_rate'){ //购买按钮赢得率
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        }
                    }else if($time_target == 'sale_sales_volume'){ //销售量
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = intval($da);
                        }
                    }else if($time_target == 'sale_many_channel_sales_volume'){ //多渠道数量
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = intval($da);
                        }
                    }else if($time_target == 'sale_sales_quota'){ //商品销售额
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }

                        }
                    }else if($time_target == 'sale_return_goods_number'){ //退款量
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = intval($da);
                        }
                    }else if($time_target == 'sale_refund'){ //退款
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else {
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'sale_refund_rate'){ //退款率
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round(abs($da) * 100, 2) . '%';
                        }
                    }else if($time_target == 'promote_discount'){ //promote折扣
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else {
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'promote_refund_discount'){ //退款返还promote折扣
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'cost_profit_total_income'){ //总收入
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'cost_profit_total_pay'){ //总支出
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'cost_profit_profit'){ //毛利润
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'cost_profit_profit_rate'){ //毛利率
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        }
                    }else if($time_target == 'amazon_fee'){ //亚马逊费用
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'amazon_sales_commission'){ //亚马逊销售佣金
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'amazon_fba_delivery_fee'){ //FBA代发货费用
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'amazon_multi_channel_delivery_fee'){ //多渠道配送费
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'amazon_settlement_fee'){ //结算费
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'amazon_other_fee'){ //其他亚马逊费用
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'amazon_return_shipping_fee'){ //返还运费
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'amazon_return_sale_commission'){ //返还亚马逊销售佣金
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else{
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'amazon_refund_deducted_commission'){ //退款扣除佣金
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'amazon_fba_return_processing_fee'){ //FBA退货处理费
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'amazon_fba_monthly_storage_fee'){ //FBA月仓储费
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'amazon_fee_rate'){ //亚马逊费用占比
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = round($da * 100, 2) . '%';
                            } else {
                                $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                            }
                        }
                    }else if($time_target == 'purchase_logistics_purchase_cost'){ //采购成本
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'purchase_logistics_logistics_cost'){ //物流/头程
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'purchase_logistics_cost_rate'){ //成本/物流费用占比
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = round($da * 100, 2) . '%';
                            } else {
                                $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                            }
                        }
                    }else if($time_target == 'operate_fee'){ //运营费用
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'operate_fee_rate'){ //运营费用占比
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = round($da * 100, 2) . '%';
                            } else {
                                $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                            }
                        }
                    }else if($time_target == 'evaluation_fee'){ //测评费用
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'evaluation_fee_rate'){ //测评费用占比
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = round($da * 100, 2) . '%';
                            } else {
                                $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                            }
                        }
                    }else if($time_target == 'cpc_cost'){ //CPC花费
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'cpc_ad_fee'){ //CPC广告费用
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'cpc_cost_rate'){ //CPC花费占比
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = round($da * 100, 2) . '%';
                            } else {
                                $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                            }
                        }
                    }else if($time_target == 'cpc_exposure'){ //CPC曝光量
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da, 2);
                        }
                    }else if($time_target == 'cpc_click_number'){ //CPC点击次数
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da, 2);
                        }
                    }else if($time_target == 'cpc_click_rate'){ //CPC点击率
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        }
                    }else if($time_target == 'cpc_order_number'){ //CPC订单数
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da, 2);
                        }
                    }else if($time_target == 'cpc_order_rate'){ //cpc订单占比
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        }
                    }else if($time_target == 'cpc_click_conversion_rate'){ //cpc点击转化率
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da * 100, 2) . '%';
                        }
                    }else if($time_target == 'cpc_turnover'){ //CPC成交额
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'cpc_turnover_rate'){ //CPC成交额占比
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = round($da * 100, 2) . '%';
                            } else {
                                $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                            }
                        }
                    }else if($time_target == 'cpc_avg_click_cost'){ //CPC平均点击花费
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'cpc_acos'){ //ACOS
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = round($da * 100, 2) . '%';
                            } else {
                                $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                            }
                        }
                    }else if($time_target == 'cpc_direct_sales_volume'){ //CPC直接销量
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da, 2);
                        }
                    }else if($time_target == 'cpc_direct_sales_quota'){ //CPC直接销售额
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'cpc_direct_sales_volume_rate'){ //CPC直接销量占比
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = round($da * 100, 2) . '%';
                            } else {
                                $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                            }
                        }
                    }else if($time_target == 'cpc_indirect_sales_volume'){ //CPC间接销量
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da, 2);
                        }
                    }else if($time_target == 'cpc_indirect_sales_quota'){ //CPC间接销售额
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'cpc_indirect_sales_volume_rate'){ //CPC间接销量占比
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if (round($da, 2) >= 0) {
                                $lists[$k1][$k2] = round($da * 100, 2) . '%';
                            } else {
                                $lists[$k1][$k2] = -round(abs($da) * 100, 2) . '%';
                            }
                        }
                    }else if($time_target == 'fba_sales_stock'){ //可售库存
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = (empty($da) || $da < 0) ? 0 : round($da, 2);
                        }
                    }else if($time_target == 'fba_sales_day'){ //可售天数
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if( intval($lists[$k1]['min_fba_sales_day']) == -111111 && intval($lists[$k1]['max_fba_sales_day']) == -111111){
                                $lists[$k1][$k2] = '计算错误' ;
                            }else{
                                if(intval($lists[$k1]['min_egt0_fba_sales_day'])  == intval($lists[$k1]['max_egt0_fba_sales_day']) ){
                                    $lists[$k1][$k2] = intval($lists[$k1]['min_egt0_fba_sales_day']) ;
                                }else{
                                    $lists[$k1][$k2] = intval($lists[$k1]['min_egt0_fba_sales_day']).'~'.intval($lists[$k1]['max_egt0_fba_sales_day']) ;
                                }
                            }
                        }
                    }else if($time_target == 'fba_reserve_stock'){ //预留库存
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = (empty($da) || $da < 0) ? 0 : round($da, 2);
                        }
                    }else if($time_target == 'fba_recommended_replenishment'){ //建议补货量
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if( intval($lists[$k1]['max_fba_recommended_replenishment']) == -111111 && intval($lists[$k1]['max_fba_recommended_replenishment']) == -111111){
                                $lists[$k1][$k2] = '计算错误' ;
                            }else{
                                $lists[$k1][$k2] = ($lists[$k1]['fba_recommended_replenishment']);
                            }
                        }
                    }else if($time_target == 'fba_special_purpose'){ //FBA专用
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if( intval($lists[$k1]['max_fba_special_purpose']) == -111111 && intval($lists[$k1]['max_fba_special_purpose']) == -111111){
                                $lists[$k1][$k2] = '计算错误' ;
                            }else{
                                $lists[$k1][$k2] = intval($lists[$k1]['fba_special_purpose']);
                            }
                        }
                    }

                    else if($time_target == 'sale_order_number'){ //订单数
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da, 2);
                        }
                    }else if($time_target == 'promote_store_fee'){ //店铺促销费用
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'other_vat_fee'){ // VAT
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'other_remark_fee'){ //备注费用
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'other_other_fee'){ //其他费用
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'other_goods_adjust'){ //产品调整
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'cpc_ad_settlement'){ //广告结款
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'fba_goods_value'){ //在库总成本
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'fba_stock'){ //FBA库存
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da, 2);
                        }
                    }else if($time_target == 'fba_sales_volume'){ //FBA销量
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da, 2);
                        }
                    }else if($time_target == 'fba_need_replenish'){ //需补货SKu
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da, 2);
                        }
                    }else if($time_target == 'fba_predundancy_number'){ //冗余FBA数
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            $lists[$k1][$k2] = round($da, 2);
                        }
                    } else if($time_target == 'promote_coupon'){ //coupon优惠券
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'promote_run_lightning_deal_fee'){ //RunLightningDealFee
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'amazon_order_fee'){ //订单费用
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else if($time_target == 'amazon_refund_fee'){ //退货退款费用
                        if(is_null($da)){
                            $lists[$k1][$k2] = '—' ;
                        }else {
                            if($_REQUEST['m'] == 'cron'){
                                $lists[$k1][$k2] = round($da, 2);
                            }else{
                                if (round($da, 2) >= 0) {
                                    $lists[$k1][$k2] = $currency_symbol . round($da, 2);
                                } else {
                                    $lists[$k1][$k2] = '-' . $currency_symbol . round(abs($da), 2);
                                }
                            }
                        }
                    }else{

                        switch ($time_target){
                            case "amazon_stock_fee"://库存费用
                            case "amazon_long_term_storage_fee"://FBA长期仓储费
                            case "goods_adjust_fee"://商品调整费用
                            case "other_review_enrollment_fee"://早期评论者计划
                            case "sale_sales_dollars"://订单金额
                            case "fba_sales_quota"://fba商品销售额
                            case "fbm_sales_quota"://fbm商品销售额
                            case "fba_logistics_head_course"://FBA头程物流
                            case "fbm_logistics_head_course"://fbm物流
                            case "shipping_charge"://运费
                            case "tax"://TAX（销售）
                            case "ware_house_lost"://FBA仓丢失赔款
                            case "ware_house_damage": //FBA仓损坏赔款
                            case "channel_fbm_safe_t_claim_demage"://SAF-T
                                $lists[$k1][$k2] = $this->formatData($da,$currency_symbol);
                                break;
                        }

                    }



                }
            }
        }
        return $lists ;
    }

    /**
     * 格式化类型
     * @author json.qiu 2021/03/10
     *
     * @param float|string|int $da 数据
     * @param string $currency_symbol 货币符号
     * @param array $datas 请求数据
     * @param int $type 类型。1表示需要处理货币符号，2不需要
     *
     * @return float|string
     */
    private function formatData($da,$currency_symbol,$datas = array(),$type = 1)
    {
        switch ($type){
            case 1:
                if(is_null($da)){
                    return '—' ;
                }else {
                    if($_REQUEST['m'] == 'cron'){
                        return round($da, 2);
                    }else {
                        if (round($da, 2) >= 0) {
                            return $currency_symbol . round($da, 2);
                        } else {
                            return '-' . $currency_symbol . round(abs($da), 2);
                        }
                    }
                }
                break;
            case 2:
                if(is_null($da)){
                    return '—' ;
                }else {
                    return round($da, 2);
                }
                break;
            case 3:
                if(is_null($da) || $datas['is_count'] == 1){
                    return '—' ;
                }else {
                    return  round($da, 2);
                }
            default:
                return '—' ;
                break;
        }

    }

    /**
     * function getGoodsDatas
     * 获取商品维度数据信息
     * @param string $where
     * @param array $datas
     * @param int $page
     * @param int $row
     * @param string $sort 排序字段
     * @param string $order 排序类型： DESC 或 ASC
     * @param int $count_tip 获取统计的数据信息 0-获取列表和总条数 1-仅仅获取列表 2-仅获取总条数
     * @param array $channel_arr
     * @return mixed
     * @author: LWZ
     */
    public function getGoodsDatas($where = '' , $datas = array() , $page = 1 , $row = 100 , $sort = '' , $order = '' , $count_tip = 0,$channel_arr = array())
    {
        $limit_num = 0 ;
        if($datas['show_type'] == 2 && $datas['limit_num'] > 0 && $datas['count_periods'] ==0 ){
            $limit_num = $datas['limit_num'] ;
        }
        if($limit_num > 0 ){
            $limit = $limit_num ;
        }else{
            $limit = $row . ' OFFSET  ' . ( ( $page - 1 ) * $row  ) ;
        }

        if($datas['time_type'] == 99) {
            $where.= empty($where) ? (' report.create_time >= ' .$datas['search_start_time'] . ' AND report.create_time <= ' . $datas['search_end_time']) : ('  AND report.create_time >= ' .$datas['search_start_time'] . ' AND report.create_time <= ' . $datas['search_end_time']) ;
            $datas['origin_where'].= '  AND report.create_time >= ' .$datas['search_start_time'] . ' AND report.create_time <= ' . $datas['search_end_time'] ;
        }else{
            $amzon_site = $this->amzon_site;
            $all_site_ids = array_keys($amzon_site) ;
            $tims_arr = $this->_get_local_time_by_site_id($all_site_ids , $datas['time_type']) ;
            $w2 = array() ;
            foreach($tims_arr as $times){
                $w2[] = "( report.site_id IN (" . $times['site_id'] .") AND report.create_time >= " . $times['start'] . ' AND report.create_time <=' . $times['end'] . ")" ;
            }
            $where.= empty($where) ? implode(" OR " , $w2 ) : " AND ( " .  implode(" OR " , $w2 ) . " ) " ;
            $datas['origin_where'].= " AND ( " .  implode(" OR " , $w2 ) . " ) " ;
        }
        // todo point?
        $amazon_goods_finance_report_by_order_pg = base::load_model_class('amazon_goods_finance_report_by_order_pg' , 'datas_ark') ;
        $rt = $amazon_goods_finance_report_by_order_pg->getListByGoods($where , $datas ,  $limit ,$sort, $order , $count_tip,$channel_arr) ;
        if(!empty($rt['lists'])){
            if($datas['show_type'] == 2){
                $rt['lists'] = $this->formatTargetData($rt['lists'] , $datas) ;
            }else{
                $rt['lists'] = $this->formatTimeData($rt['lists'] , $datas) ;
            }

        }
        return $rt ;
    }
}

/**
 * 语言文件处理
 *
 * @param	string		$language	标示符
 * @return	string		语言字符
 */
function L($language = '') {
    static $LANG = array();
    $lang = 'zh_CN';

    if (!$LANG) {
        if (file_exists(BASE_PATH . "/storage/languages/{$lang}/common_model.lang.php")) {
            require BASE_PATH . "/storage/languages/{$lang}/common_model.lang.php";
        }

        if (file_exists(BASE_PATH . "/storage/languages/{$lang}/common_tpl.lang.php")) {
            require BASE_PATH . "/storage/languages/{$lang}/common_tpl.lang.php";
        }
    }

    if (!array_key_exists($language, $LANG)) {
        return $LANG['no_language'] . '[no_language]';
    } else {
        $language = $LANG[$language];
        return $language;
    }
}
